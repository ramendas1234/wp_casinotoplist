import 'reakit-utils/warning';
import 'react';
import '../Id/IdProvider.js';
import { createComponent } from 'reakit-system/createComponent';
import { createHook } from 'reakit-system/createHook';
import '../Box/Box.js';
import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-f089acec.js';
import 'reakit-utils/useForkRef';
import 'reakit-utils/isButton';
import 'reakit-utils/tabbable';
import 'reakit-utils/hasFocusWithin';
import '../Tabbable/Tabbable.js';
import 'reakit-utils/useAllCallbacks';
import 'reakit-utils/useSealedState';
import '../Id/IdState.js';
import 'reakit-utils/useIsomorphicEffect';
import '../Disclosure/DisclosureState.js';
import 'reakit-utils/removeItemFromArray';
import '../Dialog/DialogState.js';
import 'reakit-utils/createOnKeyDown';
import '../Id/Id.js';
import '../Rover/RoverState.js';
import '../Rover/Rover.js';
import '@popperjs/core';
import '../Popover/PopoverState.js';
import { u as useMenuState } from '../MenuState-449bf74e.js';
import './MenuBarState.js';
import { useSeparator } from '../Separator/Separator.js';

var useMenuSeparator = createHook({
  name: "MenuSeparator",
  compose: useSeparator,
  useState: useMenuState,
  useOptions: function useOptions(_ref) {
    var _ref$orientation = _ref.orientation,
        orientation = _ref$orientation === void 0 ? "vertical" : _ref$orientation,
        options = _objectWithoutPropertiesLoose(_ref, ["orientation"]);

    return _objectSpread2({
      orientation: orientation === "vertical" ? "horizontal" : "vertical"
    }, options);
  }
});
var MenuSeparator = createComponent({
  as: "hr",
  useHook: useMenuSeparator
});

export { MenuSeparator, useMenuSeparator };
