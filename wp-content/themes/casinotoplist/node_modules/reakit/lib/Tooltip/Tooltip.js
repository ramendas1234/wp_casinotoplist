'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('reakit-utils/warning');
var React = require('react');
require('../Id/IdProvider.js');
var createComponent = require('reakit-system/createComponent');
var createHook = require('reakit-system/createHook');
require('../Box/Box.js');
var _rollupPluginBabelHelpers = require('../_rollupPluginBabelHelpers-baac11a7.js');
var useForkRef = require('reakit-utils/useForkRef');
require('reakit-utils/useAllCallbacks');
require('reakit-utils/useSealedState');
var usePipe = require('reakit-utils/usePipe');
require('reakit-utils/cx');
require('../Id/IdState.js');
require('../Id/IdGroup.js');
require('reakit-utils/useIsomorphicEffect');
require('../Disclosure/DisclosureState.js');
var DisclosureRegion = require('../Disclosure/DisclosureRegion.js');
require('react-dom');
var Portal = require('../Portal/Portal.js');
require('../Dialog/DialogState.js');
require('@popperjs/core');
require('../Popover/PopoverState.js');
var TooltipState = require('./TooltipState.js');

var useTooltip = createHook.createHook({
  name: "Tooltip",
  compose: DisclosureRegion.useDisclosureRegion,
  useState: TooltipState.useTooltipState,
  keys: ["unstable_portal"],
  useOptions: function useOptions(_ref) {
    var _ref$unstable_portal = _ref.unstable_portal,
        unstable_portal = _ref$unstable_portal === void 0 ? true : _ref$unstable_portal,
        options = _rollupPluginBabelHelpers._objectWithoutPropertiesLoose(_ref, ["unstable_portal"]);

    return _rollupPluginBabelHelpers._objectSpread2({
      unstable_portal: unstable_portal
    }, options);
  },
  useProps: function useProps(options, _ref2) {
    var htmlRef = _ref2.ref,
        htmlStyle = _ref2.style,
        htmlWrapElement = _ref2.wrapElement,
        htmlProps = _rollupPluginBabelHelpers._objectWithoutPropertiesLoose(_ref2, ["ref", "style", "wrapElement"]);

    var wrapElement = React.useCallback(function (element) {
      if (options.unstable_portal) {
        return React.createElement(Portal.Portal, null, element);
      }

      return element;
    }, [options.unstable_portal]);
    return _rollupPluginBabelHelpers._objectSpread2({
      ref: useForkRef.useForkRef(options.unstable_popoverRef, htmlRef),
      role: "tooltip",
      style: _rollupPluginBabelHelpers._objectSpread2({}, options.unstable_popoverStyles, {
        pointerEvents: "none"
      }, htmlStyle),
      wrapElement: usePipe.usePipe(wrapElement, htmlWrapElement)
    }, htmlProps);
  }
});
var Tooltip = createComponent.createComponent({
  as: "div",
  useHook: useTooltip
});

exports.Tooltip = Tooltip;
exports.useTooltip = useTooltip;
