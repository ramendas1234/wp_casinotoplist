'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var warning = require('reakit-utils/warning');
require('react');
require('../Id/IdProvider.js');
var createComponent = require('reakit-system/createComponent');
var createHook = require('reakit-system/createHook');
require('../Box/Box.js');
var _rollupPluginBabelHelpers = require('../_rollupPluginBabelHelpers-baac11a7.js');
require('reakit-utils/useForkRef');
require('reakit-utils/isButton');
require('reakit-utils/tabbable');
require('reakit-utils/hasFocusWithin');
require('../Tabbable/Tabbable.js');
require('reakit-utils/useAllCallbacks');
require('reakit-utils/useSealedState');
var useCreateElement = require('reakit-system/useCreateElement');
require('../Id/IdState.js');
var IdGroup = require('../Id/IdGroup.js');
require('reakit-utils/createOnKeyDown');
require('../Id/Id.js');
require('../Rover/RoverState.js');
require('../Rover/Rover.js');
var RadioState = require('./RadioState.js');

var useRadioGroup = createHook.createHook({
  name: "RadioGroup",
  compose: IdGroup.unstable_useIdGroup,
  useState: RadioState.useRadioState,
  useProps: function useProps(_, htmlProps) {
    return _rollupPluginBabelHelpers._objectSpread2({
      role: "radiogroup"
    }, htmlProps);
  }
});
var RadioGroup = createComponent.createComponent({
  as: "fieldset",
  useHook: useRadioGroup,
  useCreateElement: function useCreateElement$1(type, props, children) {
    process.env.NODE_ENV !== "production" ? warning.warning(!props["aria-label"] && !props["aria-labelledby"], "[reakit/RadioGroup]", "You should provide either `aria-label` or `aria-labelledby` props.", "See https://reakit.io/docs/radio") : void 0;
    return useCreateElement.useCreateElement(type, props, children);
  }
});

exports.RadioGroup = RadioGroup;
