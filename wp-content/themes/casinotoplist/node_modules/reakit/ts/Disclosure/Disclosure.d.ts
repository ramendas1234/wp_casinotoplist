/// <reference types="react" />
import { ButtonOptions, ButtonHTMLProps } from "../Button/Button";
import { DisclosureStateReturn } from "./DisclosureState";
export declare type DisclosureOptions = ButtonOptions & Pick<Partial<DisclosureStateReturn>, "visible"> & Pick<DisclosureStateReturn, "toggle" | "baseId">;
export declare type DisclosureHTMLProps = ButtonHTMLProps;
export declare type DisclosureProps = DisclosureOptions & DisclosureHTMLProps;
export declare const useDisclosure: {
    (options?: DisclosureOptions | undefined, htmlProps?: ButtonHTMLProps | undefined): ButtonHTMLProps;
    __keys: readonly any[];
    __useOptions: (options: DisclosureOptions, htmlProps: ButtonHTMLProps) => DisclosureOptions;
    __propsAreEqual?: ((prev: import("..").BoxOptions & {
        disabled?: boolean | undefined;
        focusable?: boolean | undefined;
        unstable_clickOnEnter?: boolean | undefined;
        unstable_clickOnSpace?: boolean | undefined;
    } & Pick<Partial<DisclosureStateReturn>, "visible"> & Pick<DisclosureStateReturn, "baseId" | "toggle"> & import("react").HTMLAttributes<any> & import("react").RefAttributes<any> & {
        wrapElement?: ((element: import("react").ReactNode) => import("react").ReactNode) | undefined;
    } & {
        disabled?: boolean | undefined;
    } & import("react").ButtonHTMLAttributes<any>, next: import("..").BoxOptions & {
        disabled?: boolean | undefined;
        focusable?: boolean | undefined;
        unstable_clickOnEnter?: boolean | undefined;
        unstable_clickOnSpace?: boolean | undefined;
    } & Pick<Partial<DisclosureStateReturn>, "visible"> & Pick<DisclosureStateReturn, "baseId" | "toggle"> & import("react").HTMLAttributes<any> & import("react").RefAttributes<any> & {
        wrapElement?: ((element: import("react").ReactNode) => import("react").ReactNode) | undefined;
    } & {
        disabled?: boolean | undefined;
    } & import("react").ButtonHTMLAttributes<any>) => boolean) | undefined;
};
export declare const Disclosure: import("reakit-system/src/createComponent").Component<"button", DisclosureOptions>;
