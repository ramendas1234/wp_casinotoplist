/// <reference types="react" />
import { DisclosureOptions, DisclosureHTMLProps } from "../Disclosure/Disclosure";
export declare type HiddenDisclosureOptions = DisclosureOptions;
export declare type HiddenDisclosureHTMLProps = DisclosureHTMLProps;
export declare type HiddenDisclosureProps = HiddenDisclosureOptions & HiddenDisclosureHTMLProps;
export declare const useHiddenDisclosure: {
    (options?: DisclosureOptions | undefined, htmlProps?: import("..").ButtonHTMLProps | undefined): import("..").ButtonHTMLProps;
    __keys: readonly any[];
    __useOptions: (options: DisclosureOptions, htmlProps: import("..").ButtonHTMLProps) => DisclosureOptions;
    __propsAreEqual?: ((prev: import("..").BoxOptions & {
        disabled?: boolean | undefined;
        focusable?: boolean | undefined;
        unstable_clickOnEnter?: boolean | undefined;
        unstable_clickOnSpace?: boolean | undefined;
    } & Pick<Partial<import("..").DisclosureStateReturn>, "visible"> & Pick<import("..").DisclosureStateReturn, "baseId" | "toggle"> & import("react").HTMLAttributes<any> & import("react").RefAttributes<any> & {
        wrapElement?: ((element: import("react").ReactNode) => import("react").ReactNode) | undefined;
    } & {
        disabled?: boolean | undefined;
    } & import("react").ButtonHTMLAttributes<any>, next: import("..").BoxOptions & {
        disabled?: boolean | undefined;
        focusable?: boolean | undefined;
        unstable_clickOnEnter?: boolean | undefined;
        unstable_clickOnSpace?: boolean | undefined;
    } & Pick<Partial<import("..").DisclosureStateReturn>, "visible"> & Pick<import("..").DisclosureStateReturn, "baseId" | "toggle"> & import("react").HTMLAttributes<any> & import("react").RefAttributes<any> & {
        wrapElement?: ((element: import("react").ReactNode) => import("react").ReactNode) | undefined;
    } & {
        disabled?: boolean | undefined;
    } & import("react").ButtonHTMLAttributes<any>) => boolean) | undefined;
};
export declare const HiddenDisclosure: import("reakit-system/src/createComponent").Component<"button", DisclosureOptions>;
