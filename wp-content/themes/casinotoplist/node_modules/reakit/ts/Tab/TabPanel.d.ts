/// <reference types="react" />
import { DisclosureRegionOptions, DisclosureRegionHTMLProps } from "../Disclosure/DisclosureRegion";
import { TabStateReturn } from "./TabState";
export declare type TabPanelOptions = DisclosureRegionOptions & Pick<TabStateReturn, "baseId" | "selectedId"> & {
    /**
     * Tab's `stopId`.
     */
    stopId: string;
};
export declare type TabPanelHTMLProps = DisclosureRegionHTMLProps;
export declare type TabPanelProps = TabPanelOptions & TabPanelHTMLProps;
export declare const useTabPanel: {
    (options?: TabPanelOptions | undefined, htmlProps?: import("..").BoxHTMLProps | undefined): import("..").BoxHTMLProps;
    __keys: readonly any[];
    __useOptions: (options: TabPanelOptions, htmlProps: import("..").BoxHTMLProps) => TabPanelOptions;
    __propsAreEqual?: ((prev: import("..").BoxOptions & Pick<Partial<import("..").unstable_IdStateReturn>, "baseId" | "unstable_idCountRef" | "unstable_setBaseId"> & {
        id?: string | undefined;
    } & Pick<Partial<import("..").DisclosureStateReturn>, "visible" | "unstable_animated" | "unstable_animating" | "unstable_stopAnimation" | "unstable_setIsMounted"> & Pick<TabStateReturn, "baseId" | "selectedId"> & {
        /**
         * Tab's `stopId`.
         */
        stopId: string;
    } & import("react").HTMLAttributes<any> & import("react").RefAttributes<any> & {
        wrapElement?: ((element: import("react").ReactNode) => import("react").ReactNode) | undefined;
    }, next: import("..").BoxOptions & Pick<Partial<import("..").unstable_IdStateReturn>, "baseId" | "unstable_idCountRef" | "unstable_setBaseId"> & {
        id?: string | undefined;
    } & Pick<Partial<import("..").DisclosureStateReturn>, "visible" | "unstable_animated" | "unstable_animating" | "unstable_stopAnimation" | "unstable_setIsMounted"> & Pick<TabStateReturn, "baseId" | "selectedId"> & {
        /**
         * Tab's `stopId`.
         */
        stopId: string;
    } & import("react").HTMLAttributes<any> & import("react").RefAttributes<any> & {
        wrapElement?: ((element: import("react").ReactNode) => import("react").ReactNode) | undefined;
    }) => boolean) | undefined;
};
export declare const TabPanel: import("reakit-system/src/createComponent").Component<"div", TabPanelOptions>;
