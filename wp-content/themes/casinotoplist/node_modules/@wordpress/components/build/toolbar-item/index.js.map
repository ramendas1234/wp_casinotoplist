{"version":3,"sources":["@wordpress/components/src/toolbar-item/index.js"],"names":["ToolbarItem","ref","children","props","accessibleToolbarState","ToolbarContext","itemProps"],"mappings":";;;;;;;;;;;;;AAGA;;AAKA;;AACA;;AAKA;;;;;;AAEA,SAASA,WAAT,OAA8CC,GAA9C,EAAoD;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAfC,KAAe;AACnD,MAAMC,sBAAsB,GAAG,yBAAYC,uBAAZ,CAA/B,CADmD,CAEnD;;AACA,MAAMC,SAAS,GAAG,6BAAgBF,sBAAhB,oBACdD,KADc;AAEjBF,IAAAA,GAAG,EAAHA;AAFiB,KAAlB;;AAKA,MAAK,OAAOC,QAAP,KAAoB,UAAzB,EAAsC;AACrC,mHACC,yFADD;AAGA,WAAO,IAAP;AACA;;AAED,MAAK,CAAEE,sBAAP,EAAgC;AAC/B,mHACC,8FADD;AAGA,WAAO,IAAP;AACA;;AAED,SAAOF,QAAQ,CAAEI,SAAF,CAAf;AACA;;eAEc,yBAAYN,WAAZ,C","sourcesContent":["/**\n * External dependencies\n */\nimport { useToolbarItem } from 'reakit/Toolbar';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef, useContext } from '@wordpress/element';\nimport warning from '@wordpress/warning';\n\n/**\n * Internal dependencies\n */\nimport ToolbarContext from '../toolbar-context';\n\nfunction ToolbarItem( { children, ...props }, ref ) {\n\tconst accessibleToolbarState = useContext( ToolbarContext );\n\t// https://reakit.io/docs/composition/#props-hooks\n\tconst itemProps = useToolbarItem( accessibleToolbarState, {\n\t\t...props,\n\t\tref,\n\t} );\n\n\tif ( typeof children !== 'function' ) {\n\t\twarning(\n\t\t\t'`ToolbarItem` is a generic headless component that accepts only function children props'\n\t\t);\n\t\treturn null;\n\t}\n\n\tif ( ! accessibleToolbarState ) {\n\t\twarning(\n\t\t\t'`ToolbarItem` should be rendered within `<Toolbar __experimentalAccessibilityLabel=\"label\">`'\n\t\t);\n\t\treturn null;\n\t}\n\n\treturn children( itemProps );\n}\n\nexport default forwardRef( ToolbarItem );\n"]}