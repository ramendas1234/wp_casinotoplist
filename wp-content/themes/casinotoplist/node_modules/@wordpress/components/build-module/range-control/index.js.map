{"version":3,"sources":["@wordpress/components/src/range-control/index.js"],"names":["isFinite","classnames","__","compose","withInstanceId","withState","BaseControl","Button","Dashicon","RangeControl","className","currentInput","label","value","instanceId","onChange","beforeIcon","afterIcon","help","allowReset","initialPosition","min","max","setState","props","id","currentInputValue","resetValue","resetCurrentInput","onChangeValue","event","newValue","target","checkValidity","undefined","parseFloat","initialFallbackValue","initialSliderValue"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { isFinite } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { compose, withInstanceId, withState } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { BaseControl, Button, Dashicon } from '../';\n\nfunction RangeControl( {\n\tclassName,\n\tcurrentInput,\n\tlabel,\n\tvalue,\n\tinstanceId,\n\tonChange,\n\tbeforeIcon,\n\tafterIcon,\n\thelp,\n\tallowReset,\n\tinitialPosition,\n\tmin,\n\tmax,\n\tsetState,\n\t...props\n} ) {\n\tconst id = `inspector-range-control-${ instanceId }`;\n\tconst currentInputValue = currentInput === null ? value : currentInput;\n\tconst resetValue = () => {\n\t\tresetCurrentInput();\n\t\tonChange();\n\t};\n\tconst resetCurrentInput = () => {\n\t\tif ( currentInput !== null ) {\n\t\t\tsetState( {\n\t\t\t\tcurrentInput: null,\n\t\t\t} );\n\t\t}\n\t};\n\n\tconst onChangeValue = ( event ) => {\n\t\tconst newValue = event.target.value;\n\t\t// If the input value is invalid temporarily save it to the state,\n\t\t// without calling on change.\n\t\tif ( ! event.target.checkValidity() ) {\n\t\t\tsetState( {\n\t\t\t\tcurrentInput: newValue,\n\t\t\t} );\n\t\t\treturn;\n\t\t}\n\t\t// The input is valid, reset the local state property used to temporaly save the value,\n\t\t// and call onChange with the new value as a number.\n\t\tresetCurrentInput();\n\t\tonChange( newValue === '' ? undefined : parseFloat( newValue ) );\n\t};\n\n\tconst initialFallbackValue = isFinite( initialPosition )\n\t\t? initialPosition\n\t\t: '';\n\n\tconst initialSliderValue = isFinite( currentInputValue )\n\t\t? currentInputValue\n\t\t: initialFallbackValue;\n\n\treturn (\n\t\t<BaseControl\n\t\t\tlabel={ label }\n\t\t\tid={ id }\n\t\t\thelp={ help }\n\t\t\tclassName={ classnames( 'components-range-control', className ) }\n\t\t>\n\t\t\t{ beforeIcon && <Dashicon icon={ beforeIcon } /> }\n\t\t\t<input\n\t\t\t\tclassName=\"components-range-control__slider\"\n\t\t\t\tid={ id }\n\t\t\t\ttype=\"range\"\n\t\t\t\tvalue={ initialSliderValue }\n\t\t\t\tonChange={ onChangeValue }\n\t\t\t\taria-describedby={ !! help ? id + '__help' : undefined }\n\t\t\t\tmin={ min }\n\t\t\t\tmax={ max }\n\t\t\t\t{ ...props }\n\t\t\t/>\n\t\t\t{ afterIcon && <Dashicon icon={ afterIcon } /> }\n\t\t\t<input\n\t\t\t\tclassName=\"components-range-control__number\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tonChange={ onChangeValue }\n\t\t\t\taria-label={ label }\n\t\t\t\tvalue={ currentInputValue }\n\t\t\t\tmin={ min }\n\t\t\t\tmax={ max }\n\t\t\t\tonBlur={ resetCurrentInput }\n\t\t\t\t{ ...props }\n\t\t\t/>\n\t\t\t{ allowReset && (\n\t\t\t\t<Button\n\t\t\t\t\tonClick={ resetValue }\n\t\t\t\t\tdisabled={ value === undefined }\n\t\t\t\t\tisSmall\n\t\t\t\t\tisSecondary\n\t\t\t\t\tclassName=\"components-range-control__reset\"\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Reset' ) }\n\t\t\t\t</Button>\n\t\t\t) }\n\t\t</BaseControl>\n\t);\n}\n\nexport default compose( [\n\twithInstanceId,\n\twithState( {\n\t\tcurrentInput: null,\n\t} ),\n] )( RangeControl );\n"]}