import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { Text, View } from 'react-native';
/**
 * WordPress dependencies
 */

import { Component } from '@wordpress/element';
/**
 * Internal dependencies
 */

import styles from './body.scss';
export var PanelBody =
/*#__PURE__*/
function (_Component) {
  _inherits(PanelBody, _Component);

  function PanelBody() {
    var _this;

    _classCallCheck(this, PanelBody);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(PanelBody).apply(this, arguments));
    _this.state = {};
    return _this;
  }

  _createClass(PanelBody, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          title = _this$props.title;
      return createElement(View, {
        style: styles.panelContainer
      }, title && createElement(Text, {
        style: styles.sectionHeaderText
      }, title), children);
    }
  }]);

  return PanelBody;
}(Component);
export default PanelBody;
//# sourceMappingURL=body.native.js.map