{"version":3,"sources":["@wordpress/components/src/clipboard-button/index.js"],"names":["Clipboard","classnames","Component","createRef","Button","ClipboardButton","arguments","containerRef","onCopy","bind","getText","container","current","clipboard","firstChild","text","on","destroy","clearTimeout","onCopyTimeout","args","clearSelection","props","onFinishCopy","setTimeout","className","children","buttonProps","classes","focusOnCopyEventTarget","event","target","focus"],"mappings":";;;;;;;;;;AAAA;;;AAGA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA;;;;AAGA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,oBAArC;AAEA;;;;AAGA,OAAOC,MAAP,MAAmB,WAAnB;;IAEMC,e;;;;;AACL,6BAAc;AAAA;;AAAA;;AACb,0FAAUC,SAAV;AAEA,UAAKC,YAAL,GAAoBJ,SAAS,EAA7B;AACA,UAAKK,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,+BAAd;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,+BAAf;AALa;AAMb;;;;wCAEmB;AAAA,UACXC,OADW,GACS,IADT,CACXA,OADW;AAAA,UACFF,MADE,GACS,IADT,CACFA,MADE;AAEnB,UAAMG,SAAS,GAAG,KAAKJ,YAAL,CAAkBK,OAApC;AAEA,WAAKC,SAAL,GAAiB,IAAIb,SAAJ,CAAeW,SAAS,CAACG,UAAzB,EAAqC;AACrDC,QAAAA,IAAI,EAAEL,OAD+C;AAErDC,QAAAA,SAAS,EAATA;AAFqD,OAArC,CAAjB;AAKA,WAAKE,SAAL,CAAeG,EAAf,CAAmB,SAAnB,EAA8BR,MAA9B;AACA;;;2CAEsB;AACtB,WAAKK,SAAL,CAAeI,OAAf;AACA,aAAO,KAAKJ,SAAZ;AACAK,MAAAA,YAAY,CAAE,KAAKC,aAAP,CAAZ;AACA;;;2BAEOC,I,EAAO;AACd;AACA;AACA;AACAA,MAAAA,IAAI,CAACC,cAAL;AAJc,wBAMmB,KAAKC,KANxB;AAAA,UAMNd,MANM,eAMNA,MANM;AAAA,UAMEe,YANF,eAMEA,YANF;;AAOd,UAAKf,MAAL,EAAc;AACbA,QAAAA,MAAM,GADO,CAEb;AACA;AACA;AACA;;AACA,YAAKe,YAAL,EAAoB;AACnBL,UAAAA,YAAY,CAAE,KAAKC,aAAP,CAAZ;AACA,eAAKA,aAAL,GAAqBK,UAAU,CAAED,YAAF,EAAgB,IAAhB,CAA/B;AACA;AACD;AACD;;;8BAES;AACT,UAAIR,IAAI,GAAG,KAAKO,KAAL,CAAWP,IAAtB;;AACA,UAAK,eAAe,OAAOA,IAA3B,EAAkC;AACjCA,QAAAA,IAAI,GAAGA,IAAI,EAAX;AACA;;AAED,aAAOA,IAAP;AACA;;;6BAEQ;AAAA,yBAYJ,KAAKO,KAZD;AAAA,UAEPG,SAFO,gBAEPA,SAFO;AAAA,UAGPC,QAHO,gBAGPA,QAHO;AAAA,UAMPlB,MANO,gBAMPA,MANO;AAAA,UAQPe,YARO,gBAQPA,YARO;AAAA,UAUPR,IAVO,gBAUPA,IAVO;AAAA,UAWJY,WAXI;;AAaR,UAAMC,OAAO,GAAG3B,UAAU,CAAE,6BAAF,EAAiCwB,SAAjC,CAA1B,CAbQ,CAeR;AACA;AACA;AACA;AACA;;AACA,UAAMI,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAEC,KAAF,EAAa;AAC3CA,QAAAA,KAAK,CAACC,MAAN,CAAaC,KAAb;AACA,OAFD;;AAIA,aACC;AAAM,QAAA,GAAG,EAAG,KAAKzB,YAAjB;AAAgC,QAAA,MAAM,EAAGsB;AAAzC,SACC,cAAC,MAAD,eAAaF,WAAb;AAA2B,QAAA,SAAS,EAAGC;AAAvC,UACGF,QADH,CADD,CADD;AAOA;;;;EAvF4BxB,S;;AA0F9B,eAAeG,eAAf","sourcesContent":["/**\n * External dependencies\n */\nimport Clipboard from 'clipboard';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Component, createRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport Button from '../button';\n\nclass ClipboardButton extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.containerRef = createRef();\n\t\tthis.onCopy = this.onCopy.bind( this );\n\t\tthis.getText = this.getText.bind( this );\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { getText, onCopy } = this;\n\t\tconst container = this.containerRef.current;\n\n\t\tthis.clipboard = new Clipboard( container.firstChild, {\n\t\t\ttext: getText,\n\t\t\tcontainer,\n\t\t} );\n\n\t\tthis.clipboard.on( 'success', onCopy );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.clipboard.destroy();\n\t\tdelete this.clipboard;\n\t\tclearTimeout( this.onCopyTimeout );\n\t}\n\n\tonCopy( args ) {\n\t\t// Clearing selection will move focus back to the triggering button,\n\t\t// ensuring that it is not reset to the body, and further that it is\n\t\t// kept within the rendered node.\n\t\targs.clearSelection();\n\n\t\tconst { onCopy, onFinishCopy } = this.props;\n\t\tif ( onCopy ) {\n\t\t\tonCopy();\n\t\t\t// For convenience and consistency, ClipboardButton offers to call\n\t\t\t// a secondary callback with delay. This is useful to reset\n\t\t\t// consumers' state, e.g. to revert a label from \"Copied\" to\n\t\t\t// \"Copy\".\n\t\t\tif ( onFinishCopy ) {\n\t\t\t\tclearTimeout( this.onCopyTimeout );\n\t\t\t\tthis.onCopyTimeout = setTimeout( onFinishCopy, 4000 );\n\t\t\t}\n\t\t}\n\t}\n\n\tgetText() {\n\t\tlet text = this.props.text;\n\t\tif ( 'function' === typeof text ) {\n\t\t\ttext = text();\n\t\t}\n\n\t\treturn text;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tchildren,\n\t\t\t// Disable reason: Exclude from spread props passed to Button\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\tonCopy,\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\tonFinishCopy,\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\ttext,\n\t\t\t...buttonProps\n\t\t} = this.props;\n\t\tconst classes = classnames( 'components-clipboard-button', className );\n\n\t\t// Workaround for inconsistent behavior in Safari, where <textarea> is not\n\t\t// the document.activeElement at the moment when the copy event fires.\n\t\t// This causes documentHasSelection() in the copy-handler component to\n\t\t// mistakenly override the ClipboardButton, and copy a serialized string\n\t\t// of the current block instead.\n\t\tconst focusOnCopyEventTarget = ( event ) => {\n\t\t\tevent.target.focus();\n\t\t};\n\n\t\treturn (\n\t\t\t<span ref={ this.containerRef } onCopy={ focusOnCopyEventTarget }>\n\t\t\t\t<Button { ...buttonProps } className={ classes }>\n\t\t\t\t\t{ children }\n\t\t\t\t</Button>\n\t\t\t</span>\n\t\t);\n\t}\n}\n\nexport default ClipboardButton;\n"]}