import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import classnames from 'classnames';
/**
 * Internal dependencies
 */

import ToolbarGroup from '../toolbar-group';
import ToolbarContainer from './toolbar-container';
/**
 * Renders a toolbar.
 *
 * To add controls, simply pass `ToolbarButton` components as children.
 *
 * @param {Object} props             Component props.
 * @param {string} [props.className] Class to set on the container div.
 */

function Toolbar(_ref) {
  var className = _ref.className,
      __experimentalAccessibilityLabel = _ref.__experimentalAccessibilityLabel,
      props = _objectWithoutProperties(_ref, ["className", "__experimentalAccessibilityLabel"]);

  if (__experimentalAccessibilityLabel) {
    return createElement(ToolbarContainer // `ToolbarGroup` already uses components-toolbar for compatibility reasons
    , _extends({
      className: classnames('components-accessible-toolbar', className),
      accessibilityLabel: __experimentalAccessibilityLabel
    }, props));
  }

  return createElement(ToolbarGroup, _extends({}, props, {
    className: className
  }));
}

export default Toolbar;
//# sourceMappingURL=index.js.map