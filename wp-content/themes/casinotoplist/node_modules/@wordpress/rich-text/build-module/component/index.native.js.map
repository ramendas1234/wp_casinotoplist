{"version":3,"sources":["@wordpress/rich-text/src/component/index.native.js"],"names":["RCTAztecView","View","Platform","pickBy","memize","Component","compose","withPreferredColorScheme","withSelect","childrenBlock","decodeEntities","BACKSPACE","isURL","FormatEdit","applyFormat","getActiveFormat","getActiveFormats","isEmpty","isEmptyLine","create","toHTMLString","removeLineSeparator","isCollapsed","remove","styles","unescapeSpaces","text","replace","gutenbergFormatNamesToAztec","RichText","value","selectionStart","selectionEnd","multiline","__unstableMultilineTag","arguments","isMultiline","multilineTag","multilineWrapperTags","isIOS","OS","createRecord","bind","onChange","handleEnter","handleDelete","onPaste","onFocus","onBlur","onTextUpdate","onContentSizeChange","onFormatChange","formatToValue","maxSize","onSelectionChange","onSelectionChangeFromAztec","valueToFormat","willTrimSpaces","getHtmlToRender","state","activeFormats","selectedFormat","height","needsSelectionUpdate","savedContent","isTouched","lastAztecEventType","lastHistoryValue","props","start","end","String","trimLeft","formats","replacements","preserveWhiteSpace","html","range","Math","min","length","removeRootTagsProduceByAztec","record","formatTypes","map","name","filter","undefined","Boolean","getRecord","changeHandlers","v","key","startsWith","Object","values","forEach","changeHandler","setState","onCreateUndoLevel","__unstableOnCreateUndoLevel","result","removeRootTag","tagName","rootTagsToEliminate","element","tagsToEliminate","removeTag","tag","openingTagRegexp","RegExp","closingTagRegexp","event","contentWithoutRootTag","nativeEvent","lastEventCount","eventCount","comesFromAztec","firedAfterTextChanged","refresh","contentSize","onEnter","shiftKey","keyCode","isReverse","onDelete","newValue","preventDefault","pastedText","pastedHtml","files","currentRecord","trimmedText","trim","linkedRecord","type","attributes","href","window","console","log","plainText","unstableOnFocus","index","hasChanged","isManual","realStart","realEnd","max","__unstableIsSelected","Array","isArray","toHTML","format","nextProps","reversed","blockIsSelected","__unstableMobileNoFocusOnMount","_editor","focus","isFocused","shouldBlurOnUnmount","blur","prevProps","isSelected","prevIsSelected","blockHtmlElements","leadingOrTrailingSpaces","matches","match","extraAttributes","style","children","getStylesFromColorScheme","minWidth","maxWidth","withoutInteractiveFormatting","placeholderStyle","richTextPlaceholder","richTextPlaceholderDark","defaultPlaceholderTextColor","color","richText","richTextDark","defaultColor","defaultTextDecorationColor","textDecorationColor","defaultFontFamily","fontFamily","selection","warn","brBeforeParaMatches","count","newSelectionStart","newSelectionEnd","width","ref","setRef","minHeight","placeholder","placeholderTextColor","deleteEnter","getActiveFormatNames","onCaretVerticalPositionChange","fontSize","fontWeight","fontStyle","disableEditingMenu","textAlign","id","selectionColor","defaultProps","select","getFormatTypes"],"mappings":"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","sourcesContent":["/*eslint no-console: [\"error\", { allow: [\"warn\"] }] */\n\n/**\n * External dependencies\n */\nimport RCTAztecView from 'react-native-aztec';\nimport { View, Platform } from 'react-native';\nimport { pickBy } from 'lodash';\nimport memize from 'memize';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { compose, withPreferredColorScheme } from '@wordpress/compose';\nimport { withSelect } from '@wordpress/data';\nimport { childrenBlock } from '@wordpress/blocks';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { BACKSPACE } from '@wordpress/keycodes';\nimport { isURL } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport FormatEdit from './format-edit';\nimport { applyFormat } from '../apply-format';\nimport { getActiveFormat } from '../get-active-format';\nimport { getActiveFormats } from '../get-active-formats';\nimport { isEmpty, isEmptyLine } from '../is-empty';\nimport { create } from '../create';\nimport { toHTMLString } from '../to-html-string';\nimport { removeLineSeparator } from '../remove-line-separator';\nimport { isCollapsed } from '../is-collapsed';\nimport { remove } from '../remove';\nimport styles from './style.scss';\n\nconst unescapeSpaces = ( text ) => {\n\treturn text.replace( /&nbsp;|&#160;/gi, ' ' );\n};\n\nconst gutenbergFormatNamesToAztec = {\n\t'core/bold': 'bold',\n\t'core/italic': 'italic',\n\t'core/strikethrough': 'strikethrough',\n};\n\nexport class RichText extends Component {\n\tconstructor( {\n\t\tvalue,\n\t\tselectionStart,\n\t\tselectionEnd,\n\t\t__unstableMultilineTag: multiline,\n\t} ) {\n\t\tsuper( ...arguments );\n\n\t\tthis.isMultiline = false;\n\t\tif ( multiline === true || multiline === 'p' || multiline === 'li' ) {\n\t\t\tthis.multilineTag = multiline === true ? 'p' : multiline;\n\t\t\tthis.isMultiline = true;\n\t\t}\n\n\t\tif ( this.multilineTag === 'li' ) {\n\t\t\tthis.multilineWrapperTags = [ 'ul', 'ol' ];\n\t\t}\n\n\t\tthis.isIOS = Platform.OS === 'ios';\n\t\tthis.createRecord = this.createRecord.bind( this );\n\t\tthis.onChange = this.onChange.bind( this );\n\t\tthis.handleEnter = this.handleEnter.bind( this );\n\t\tthis.handleDelete = this.handleDelete.bind( this );\n\t\tthis.onPaste = this.onPaste.bind( this );\n\t\tthis.onFocus = this.onFocus.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onTextUpdate = this.onTextUpdate.bind( this );\n\t\tthis.onContentSizeChange = this.onContentSizeChange.bind( this );\n\t\tthis.onFormatChange = this.onFormatChange.bind( this );\n\t\tthis.formatToValue = memize( this.formatToValue.bind( this ), {\n\t\t\tmaxSize: 1,\n\t\t} );\n\n\t\t// This prevents a bug in Aztec which triggers onSelectionChange twice on format change\n\t\tthis.onSelectionChange = this.onSelectionChange.bind( this );\n\t\tthis.onSelectionChangeFromAztec = this.onSelectionChangeFromAztec.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.valueToFormat = this.valueToFormat.bind( this );\n\t\tthis.willTrimSpaces = this.willTrimSpaces.bind( this );\n\t\tthis.getHtmlToRender = this.getHtmlToRender.bind( this );\n\t\tthis.state = {\n\t\t\tactiveFormats: [],\n\t\t\tselectedFormat: null,\n\t\t\theight: 0,\n\t\t};\n\t\tthis.needsSelectionUpdate = false;\n\t\tthis.savedContent = '';\n\t\tthis.isTouched = false;\n\t\tthis.lastAztecEventType = null;\n\n\t\tthis.lastHistoryValue = value;\n\n\t\t// Internal values that are update synchronously, unlike props.\n\t\tthis.value = value;\n\t\tthis.selectionStart = selectionStart;\n\t\tthis.selectionEnd = selectionEnd;\n\t}\n\n\t/**\n\t * Get the current record (value and selection) from props and state.\n\t *\n\t * @return {Object} The current record (value and selection).\n\t */\n\tgetRecord() {\n\t\tconst { selectionStart: start, selectionEnd: end } = this.props;\n\t\tlet { value } = this.props;\n\n\t\t// Since we get the text selection from Aztec we need to be in sync with the HTML `value`\n\t\t// Removing leading white spaces using `trim()` should make sure this is the case.\n\t\tif ( typeof value === 'string' || value instanceof String ) {\n\t\t\tvalue = value.trimLeft();\n\t\t}\n\n\t\tconst { formats, replacements, text } = this.formatToValue( value );\n\t\tconst { activeFormats } = this.state;\n\n\t\treturn { formats, replacements, text, start, end, activeFormats };\n\t}\n\n\t/**\n\t * Creates a RichText value \"record\" from the current content and selection\n\t * information\n\t *\n\t *\n\t * @return {Object} A RichText value with formats and selection.\n\t */\n\tcreateRecord() {\n\t\tconst { preserveWhiteSpace } = this.props;\n\t\tconst value = {\n\t\t\tstart: this.selectionStart,\n\t\t\tend: this.selectionEnd,\n\t\t\t...create( {\n\t\t\t\thtml: this.value,\n\t\t\t\trange: null,\n\t\t\t\tmultilineTag: this.multilineTag,\n\t\t\t\tmultilineWrapperTags: this.multilineWrapperTags,\n\t\t\t\tpreserveWhiteSpace,\n\t\t\t} ),\n\t\t};\n\t\tconst start = Math.min( this.selectionStart, value.text.length );\n\t\tconst end = Math.min( this.selectionEnd, value.text.length );\n\t\treturn { ...value, start, end };\n\t}\n\n\tvalueToFormat( value ) {\n\t\t// remove the outer root tags\n\t\treturn this.removeRootTagsProduceByAztec(\n\t\t\ttoHTMLString( {\n\t\t\t\tvalue,\n\t\t\t\tmultilineTag: this.multilineTag,\n\t\t\t} )\n\t\t);\n\t}\n\n\tgetActiveFormatNames( record ) {\n\t\tconst { formatTypes } = this.props;\n\n\t\treturn formatTypes\n\t\t\t.map( ( { name } ) => name )\n\t\t\t.filter( ( name ) => {\n\t\t\t\treturn getActiveFormat( record, name ) !== undefined;\n\t\t\t} )\n\t\t\t.map( ( name ) => gutenbergFormatNamesToAztec[ name ] )\n\t\t\t.filter( Boolean );\n\t}\n\n\tonFormatChange( record ) {\n\t\tthis.getRecord( record );\n\t\tconst { start, end, activeFormats = [] } = record;\n\t\tconst changeHandlers = pickBy( this.props, ( v, key ) =>\n\t\t\tkey.startsWith( 'format_on_change_functions_' )\n\t\t);\n\n\t\tObject.values( changeHandlers ).forEach( ( changeHandler ) => {\n\t\t\tchangeHandler( record.formats, record.text );\n\t\t} );\n\n\t\tthis.value = this.valueToFormat( record );\n\t\tthis.props.onChange( this.value );\n\t\tthis.setState( { activeFormats } );\n\t\tthis.props.onSelectionChange( start, end );\n\t\tthis.selectionStart = start;\n\t\tthis.selectionEnd = end;\n\n\t\tthis.onCreateUndoLevel();\n\n\t\tthis.lastAztecEventType = 'format change';\n\t}\n\n\tonCreateUndoLevel() {\n\t\tconst { __unstableOnCreateUndoLevel: onCreateUndoLevel } = this.props;\n\t\t// If the content is the same, no level needs to be created.\n\t\tif ( this.lastHistoryValue === this.value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tonCreateUndoLevel();\n\t\tthis.lastHistoryValue = this.value;\n\t}\n\n\t/*\n\t * Cleans up any root tags produced by aztec.\n\t * TODO: This should be removed on a later version when aztec doesn't return the top tag of the text being edited\n\t */\n\tremoveRootTagsProduceByAztec( html ) {\n\t\tlet result = this.removeRootTag( this.props.tagName, html );\n\t\t// Temporary workaround for https://github.com/WordPress/gutenberg/pull/13763\n\t\tif ( this.props.rootTagsToEliminate ) {\n\t\t\tthis.props.rootTagsToEliminate.forEach( ( element ) => {\n\t\t\t\tresult = this.removeRootTag( element, result );\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.props.tagsToEliminate ) {\n\t\t\tthis.props.tagsToEliminate.forEach( ( element ) => {\n\t\t\t\tresult = this.removeTag( element, result );\n\t\t\t} );\n\t\t}\n\t\treturn result;\n\t}\n\n\tremoveRootTag( tag, html ) {\n\t\tconst openingTagRegexp = RegExp( '^<' + tag + '[^>]*>', 'gim' );\n\t\tconst closingTagRegexp = RegExp( '</' + tag + '>$', 'gim' );\n\t\treturn html\n\t\t\t.replace( openingTagRegexp, '' )\n\t\t\t.replace( closingTagRegexp, '' );\n\t}\n\tremoveTag( tag, html ) {\n\t\tconst openingTagRegexp = RegExp( '<' + tag + '>', 'gim' );\n\t\tconst closingTagRegexp = RegExp( '</' + tag + '>', 'gim' );\n\t\treturn html\n\t\t\t.replace( openingTagRegexp, '' )\n\t\t\t.replace( closingTagRegexp, '' );\n\t}\n\n\t/*\n\t * Handles any case where the content of the AztecRN instance has changed\n\t */\n\tonChange( event ) {\n\t\tconst contentWithoutRootTag = this.removeRootTagsProduceByAztec(\n\t\t\tunescapeSpaces( event.nativeEvent.text )\n\t\t);\n\t\t// On iOS, onChange can be triggered after selection changes, even though there are no content changes.\n\t\tif ( contentWithoutRootTag === this.value ) {\n\t\t\treturn;\n\t\t}\n\t\tthis.lastEventCount = event.nativeEvent.eventCount;\n\t\tthis.comesFromAztec = true;\n\t\tthis.firedAfterTextChanged = true; // the onChange event always fires after the fact\n\t\tthis.onTextUpdate( event );\n\t\tthis.lastAztecEventType = 'input';\n\t}\n\n\tonTextUpdate( event ) {\n\t\tconst contentWithoutRootTag = this.removeRootTagsProduceByAztec(\n\t\t\tunescapeSpaces( event.nativeEvent.text )\n\t\t);\n\n\t\tconst refresh = this.value !== contentWithoutRootTag;\n\t\tthis.value = contentWithoutRootTag;\n\n\t\t// we don't want to refresh if our goal is just to create a record\n\t\tif ( refresh ) {\n\t\t\tthis.props.onChange( contentWithoutRootTag );\n\t\t}\n\t}\n\n\t/*\n\t * Handles any case where the content of the AztecRN instance has changed in size\n\t */\n\tonContentSizeChange( contentSize ) {\n\t\tthis.setState( contentSize );\n\t\tthis.lastAztecEventType = 'content size change';\n\t}\n\n\thandleEnter( event ) {\n\t\tconst { onEnter } = this.props;\n\n\t\tif ( ! onEnter ) {\n\t\t\treturn;\n\t\t}\n\n\t\tonEnter( {\n\t\t\tvalue: this.createRecord(),\n\t\t\tonChange: this.onFormatChange,\n\t\t\tshiftKey: event.shiftKey,\n\t\t} );\n\t\tthis.lastAztecEventType = 'input';\n\t}\n\n\thandleDelete( event ) {\n\t\tconst keyCode = BACKSPACE; // TODO : should we differentiate BACKSPACE and DELETE?\n\t\tconst isReverse = keyCode === BACKSPACE;\n\n\t\tconst { onDelete, __unstableMultilineTag: multilineTag } = this.props;\n\t\tconst { activeFormats = [] } = this.state;\n\t\tthis.lastEventCount = event.nativeEvent.eventCount;\n\t\tthis.comesFromAztec = true;\n\t\tthis.firedAfterTextChanged = event.nativeEvent.firedAfterTextChanged;\n\t\tconst value = this.createRecord();\n\t\tconst { start, end, text } = value;\n\t\tlet newValue;\n\n\t\t// Always handle full content deletion ourselves.\n\t\tif ( start === 0 && end !== 0 && end >= text.length ) {\n\t\t\tnewValue = remove( value );\n\t\t\tthis.onFormatChange( newValue );\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( multilineTag ) {\n\t\t\tif (\n\t\t\t\tisReverse &&\n\t\t\t\tvalue.start === 0 &&\n\t\t\t\tvalue.end === 0 &&\n\t\t\t\tisEmptyLine( value )\n\t\t\t) {\n\t\t\t\tnewValue = removeLineSeparator( value, ! isReverse );\n\t\t\t} else {\n\t\t\t\tnewValue = removeLineSeparator( value, isReverse );\n\t\t\t}\n\t\t\tif ( newValue ) {\n\t\t\t\tthis.onFormatChange( newValue );\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Only process delete if the key press occurs at an uncollapsed edge.\n\t\tif (\n\t\t\t! onDelete ||\n\t\t\t! isCollapsed( value ) ||\n\t\t\tactiveFormats.length ||\n\t\t\t( isReverse && start !== 0 ) ||\n\t\t\t( ! isReverse && end !== text.length )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tonDelete( { isReverse, value } );\n\n\t\tevent.preventDefault();\n\t\tthis.lastAztecEventType = 'input';\n\t}\n\n\t/**\n\t * Handles a paste event from the native Aztec Wrapper.\n\t *\n\t * @param {Object} event The paste event which wraps `nativeEvent`.\n\t */\n\tonPaste( event ) {\n\t\tconst { onPaste, onChange } = this.props;\n\t\tconst { activeFormats = [] } = this.state;\n\n\t\tconst { pastedText, pastedHtml, files } = event.nativeEvent;\n\t\tconst currentRecord = this.createRecord();\n\n\t\tevent.preventDefault();\n\n\t\t// There is a selection, check if a URL is pasted.\n\t\tif ( ! isCollapsed( currentRecord ) ) {\n\t\t\tconst trimmedText = ( pastedHtml || pastedText )\n\t\t\t\t.replace( /<[^>]+>/g, '' )\n\t\t\t\t.trim();\n\n\t\t\t// A URL was pasted, turn the selection into a link\n\t\t\tif ( isURL( trimmedText ) ) {\n\t\t\t\tconst linkedRecord = applyFormat( currentRecord, {\n\t\t\t\t\ttype: 'a',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\thref: decodeEntities( trimmedText ),\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t\tthis.value = this.valueToFormat( linkedRecord );\n\t\t\t\tonChange( this.value );\n\n\t\t\t\t// Allows us to ask for this information when we get a report.\n\t\t\t\twindow.console.log( 'Created link:\\n\\n', trimmedText );\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif ( onPaste ) {\n\t\t\tonPaste( {\n\t\t\t\tvalue: currentRecord,\n\t\t\t\tonChange: this.onFormatChange,\n\t\t\t\thtml: pastedHtml,\n\t\t\t\tplainText: pastedText,\n\t\t\t\tfiles,\n\t\t\t\tactiveFormats,\n\t\t\t} );\n\t\t}\n\t}\n\n\tonFocus() {\n\t\tthis.isTouched = true;\n\n\t\tconst { unstableOnFocus, onSelectionChange } = this.props;\n\n\t\tif ( unstableOnFocus ) {\n\t\t\tunstableOnFocus();\n\t\t}\n\n\t\t// We know for certain that on focus, the old selection is invalid. It\n\t\t// will be recalculated on `selectionchange`.\n\t\tconst index = undefined;\n\n\t\tonSelectionChange( index, index );\n\n\t\tthis.lastAztecEventType = 'focus';\n\t}\n\n\tonBlur( event ) {\n\t\tthis.isTouched = false;\n\n\t\t// Check if value is up to date with latest state of native AztecView\n\t\tif (\n\t\t\tevent.nativeEvent.text &&\n\t\t\tevent.nativeEvent.text !== this.props.value\n\t\t) {\n\t\t\tthis.onTextUpdate( event );\n\t\t}\n\n\t\tif ( this.props.onBlur ) {\n\t\t\tthis.props.onBlur( event );\n\t\t}\n\n\t\tthis.lastAztecEventType = 'blur';\n\t}\n\n\tonSelectionChange( start, end ) {\n\t\tconst hasChanged =\n\t\t\tthis.selectionStart !== start || this.selectionEnd !== end;\n\n\t\tthis.selectionStart = start;\n\t\tthis.selectionEnd = end;\n\n\t\t// This is a manual selection change event if onChange was not triggered just before\n\t\t// and we did not just trigger a text update\n\t\t// `onChange` could be the last event and could have been triggered a long time ago so\n\t\t// this approach is not perfectly reliable\n\t\tconst isManual =\n\t\t\tthis.lastAztecEventType !== 'input' &&\n\t\t\tthis.props.value === this.value;\n\t\tif ( hasChanged && isManual ) {\n\t\t\tconst value = this.createRecord();\n\t\t\tconst activeFormats = getActiveFormats( value );\n\t\t\tthis.setState( { activeFormats } );\n\t\t}\n\n\t\tthis.props.onSelectionChange( start, end );\n\t}\n\n\tonSelectionChangeFromAztec( start, end, text, event ) {\n\t\t// `end` can be less than `start` on iOS\n\t\t// Let's fix that here so `rich-text/slice` can work properly\n\t\tconst realStart = Math.min( start, end );\n\t\tconst realEnd = Math.max( start, end );\n\n\t\t// check and dicsard stray event, where the text and selection is equal to the ones already cached\n\t\tconst contentWithoutRootTag = this.removeRootTagsProduceByAztec(\n\t\t\tunescapeSpaces( event.nativeEvent.text )\n\t\t);\n\t\tif (\n\t\t\tcontentWithoutRootTag === this.value &&\n\t\t\trealStart === this.selectionStart &&\n\t\t\trealEnd === this.selectionEnd\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.comesFromAztec = true;\n\t\tthis.firedAfterTextChanged = true; // Selection change event always fires after the fact\n\n\t\t// update text before updating selection\n\t\t// Make sure there are changes made to the content before upgrading it upward\n\t\tthis.onTextUpdate( event );\n\n\t\t// Aztec can send us selection change events after it has lost focus.\n\t\t// For instance the autocorrect feature will complete a partially written\n\t\t// word when resigning focus, causing a selection change event.\n\t\t// Forwarding this selection change could cause this RichText to regain\n\t\t// focus and start a focus loop.\n\t\t//\n\t\t// See https://github.com/wordpress-mobile/gutenberg-mobile/issues/1696\n\t\tif ( this.props.__unstableIsSelected ) {\n\t\t\tthis.onSelectionChange( realStart, realEnd );\n\t\t}\n\t\t// Update lastEventCount to prevent Aztec from re-rendering the content it just sent\n\t\tthis.lastEventCount = event.nativeEvent.eventCount;\n\n\t\tthis.lastAztecEventType = 'selection change';\n\t}\n\n\tisEmpty() {\n\t\treturn isEmpty( this.formatToValue( this.props.value ) );\n\t}\n\n\tformatToValue( value ) {\n\t\tconst { preserveWhiteSpace } = this.props;\n\t\t// Handle deprecated `children` and `node` sources.\n\t\tif ( Array.isArray( value ) ) {\n\t\t\treturn create( {\n\t\t\t\thtml: childrenBlock.toHTML( value ),\n\t\t\t\tmultilineTag: this.multilineTag,\n\t\t\t\tmultilineWrapperTags: this.multilineWrapperTags,\n\t\t\t\tpreserveWhiteSpace,\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.props.format === 'string' ) {\n\t\t\treturn create( {\n\t\t\t\thtml: value,\n\t\t\t\tmultilineTag: this.multilineTag,\n\t\t\t\tmultilineWrapperTags: this.multilineWrapperTags,\n\t\t\t\tpreserveWhiteSpace,\n\t\t\t} );\n\t\t}\n\n\t\t// Guard for blocks passing `null` in onSplit callbacks. May be removed\n\t\t// if onSplit is revised to not pass a `null` value.\n\t\tif ( value === null ) {\n\t\t\treturn create();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tshouldComponentUpdate( nextProps ) {\n\t\tif (\n\t\t\tnextProps.tagName !== this.props.tagName ||\n\t\t\tnextProps.reversed !== this.props.reversed ||\n\t\t\tnextProps.start !== this.props.start\n\t\t) {\n\t\t\tthis.lastEventCount = undefined;\n\t\t\tthis.value = undefined;\n\t\t\treturn true;\n\t\t}\n\n\t\t// TODO: Please re-introduce the check to avoid updating the content right after an `onChange` call.\n\t\t// It was removed in https://github.com/WordPress/gutenberg/pull/12417 to fix undo/redo problem.\n\n\t\t// If the component is changed React side (undo/redo/merging/splitting/custom text actions)\n\t\t// we need to make sure the native is updated as well.\n\n\t\t// Also, don't trust the \"this.lastContent\" as on Android, incomplete text events arrive\n\t\t//  with only some of the text, while the virtual keyboard's suggestion system does its magic.\n\t\t// ** compare with this.lastContent for optimizing performance by not forcing Aztec with text it already has\n\t\t// , but compare with props.value to not lose \"half word\" text because of Android virtual keyb autosuggestion behavior\n\t\tif (\n\t\t\ttypeof nextProps.value !== 'undefined' &&\n\t\t\ttypeof this.props.value !== 'undefined' &&\n\t\t\t( ! this.comesFromAztec || ! this.firedAfterTextChanged ) &&\n\t\t\tnextProps.value !== this.props.value\n\t\t) {\n\t\t\t// Gutenberg seems to try to mirror the caret state even on events that only change the content so,\n\t\t\t//  let's force caret update if state has selection set.\n\t\t\tif (\n\t\t\t\ttypeof nextProps.selectionStart !== 'undefined' &&\n\t\t\t\ttypeof nextProps.selectionEnd !== 'undefined'\n\t\t\t) {\n\t\t\t\tthis.needsSelectionUpdate = true;\n\t\t\t}\n\n\t\t\tthis.lastEventCount = undefined; // force a refresh on the native side\n\t\t}\n\n\t\tif ( ! this.comesFromAztec ) {\n\t\t\tif (\n\t\t\t\ttypeof nextProps.selectionStart !== 'undefined' &&\n\t\t\t\ttypeof nextProps.selectionEnd !== 'undefined' &&\n\t\t\t\tnextProps.selectionStart !== this.props.selectionStart &&\n\t\t\t\tnextProps.selectionStart !== this.selectionStart &&\n\t\t\t\tnextProps.__unstableIsSelected\n\t\t\t) {\n\t\t\t\tthis.needsSelectionUpdate = true;\n\t\t\t\tthis.lastEventCount = undefined; // force a refresh on the native side\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tcomponentDidMount() {\n\t\t// Request focus if wrapping block is selected and parent hasn't inhibited the focus request. This method of focusing\n\t\t//  is trying to implement the web-side counterpart of BlockList's `focusTabbable` where the BlockList is focusing an\n\t\t//  inputbox by searching the DOM. We don't have the DOM in RN so, using the combination of blockIsSelected and __unstableMobileNoFocusOnMount\n\t\t//  to determine if we should focus the RichText.\n\t\tif (\n\t\t\tthis.props.blockIsSelected &&\n\t\t\t! this.props.__unstableMobileNoFocusOnMount\n\t\t) {\n\t\t\tthis._editor.focus();\n\t\t\tthis.onSelectionChange(\n\t\t\t\tthis.props.selectionStart || 0,\n\t\t\t\tthis.props.selectionEnd || 0\n\t\t\t);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif ( this._editor.isFocused() && this.props.shouldBlurOnUnmount ) {\n\t\t\tthis._editor.blur();\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.props.value !== this.value ) {\n\t\t\tthis.value = this.props.value;\n\t\t\tthis.lastEventCount = undefined;\n\t\t}\n\t\tconst { __unstableIsSelected: isSelected } = this.props;\n\n\t\tconst { __unstableIsSelected: prevIsSelected } = prevProps;\n\n\t\tif ( isSelected && ! prevIsSelected ) {\n\t\t\tthis._editor.focus();\n\t\t\t// Update selection props explicitly when component is selected as Aztec won't call onSelectionChange\n\t\t\t// if its internal value hasn't change. When created, default value is 0, 0\n\t\t\tthis.onSelectionChange(\n\t\t\t\tthis.props.selectionStart || 0,\n\t\t\t\tthis.props.selectionEnd || 0\n\t\t\t);\n\t\t} else if ( ! isSelected && prevIsSelected ) {\n\t\t\tthis._editor.blur();\n\t\t}\n\t}\n\n\twillTrimSpaces( html ) {\n\t\tconst { tagName } = this.props;\n\n\t\t// aztec won't trim spaces in a case of <pre> block, so we are excluding it\n\t\tif ( tagName === 'pre' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// regex for detecting spaces around block element html tags\n\t\tconst blockHtmlElements =\n\t\t\t'(div|br|blockquote|ul|ol|li|p|pre|h1|h2|h3|h4|h5|h6|iframe|hr)';\n\t\tconst leadingOrTrailingSpaces = new RegExp(\n\t\t\t`(\\\\s+)<\\/?${ blockHtmlElements }>|<\\/?${ blockHtmlElements }>(\\\\s+)`,\n\t\t\t'g'\n\t\t);\n\t\tconst matches = html.match( leadingOrTrailingSpaces );\n\t\tif ( matches && matches.length > 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tgetHtmlToRender( record, tagName ) {\n\t\t// Save back to HTML from React tree\n\t\tlet value = this.valueToFormat( record );\n\n\t\tif ( value === undefined ) {\n\t\t\tthis.lastEventCount = undefined; // force a refresh on the native side\n\t\t\tvalue = '';\n\t\t}\n\t\t// On android if content is empty we need to send no content or else the placeholder will not show.\n\t\tif ( ! this.isIOS && value === '' ) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( tagName ) {\n\t\t\tlet extraAttributes = ``;\n\t\t\tif ( tagName === `ol` ) {\n\t\t\t\tif ( this.props.reversed ) {\n\t\t\t\t\textraAttributes += ` reversed`;\n\t\t\t\t}\n\t\t\t\tif ( this.props.start ) {\n\t\t\t\t\textraAttributes += ` start=${ this.props.start }`;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = `<${ tagName } ${ extraAttributes }>${ value }</${ tagName }>`;\n\t\t}\n\t\treturn value;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\ttagName,\n\t\t\tstyle,\n\t\t\t__unstableIsSelected: isSelected,\n\t\t\tchildren,\n\t\t\tgetStylesFromColorScheme,\n\t\t\tminWidth,\n\t\t\tmaxWidth,\n\t\t\tformatTypes,\n\t\t\twithoutInteractiveFormatting,\n\t\t} = this.props;\n\n\t\tconst record = this.getRecord();\n\t\tconst html = this.getHtmlToRender( record, tagName );\n\n\t\tconst placeholderStyle = getStylesFromColorScheme(\n\t\t\tstyles.richTextPlaceholder,\n\t\t\tstyles.richTextPlaceholderDark\n\t\t);\n\n\t\tconst { color: defaultPlaceholderTextColor } = placeholderStyle;\n\n\t\tconst {\n\t\t\tcolor: defaultColor,\n\t\t\ttextDecorationColor: defaultTextDecorationColor,\n\t\t\tfontFamily: defaultFontFamily,\n\t\t} = getStylesFromColorScheme( styles.richText, styles.richTextDark );\n\n\t\tlet selection = null;\n\t\tif ( this.needsSelectionUpdate ) {\n\t\t\tthis.needsSelectionUpdate = false;\n\t\t\tselection = {\n\t\t\t\tstart: this.props.selectionStart,\n\t\t\t\tend: this.props.selectionEnd,\n\t\t\t};\n\n\t\t\t// On AztecAndroid, setting the caret to an out-of-bounds position will crash the editor so, let's check for some cases.\n\t\t\tif ( ! this.isIOS ) {\n\t\t\t\t// Aztec performs some html text cleanup while parsing it so, its internal representation gets out-of-sync with the\n\t\t\t\t// representation of the format-lib on the RN side. We need to avoid trying to set the caret position because it may\n\t\t\t\t// be outside the text bounds and crash Aztec, at least on Android.\n\t\t\t\tif ( this.willTrimSpaces( html ) ) {\n\t\t\t\t\t// the html will get trimmed by the cleaning up functions in Aztec and caret position will get out-of-sync.\n\t\t\t\t\t// So, skip forcing it, let Aztec just do its best and just log the fact.\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t'RichText value will be trimmed for spaces! Avoiding setting the caret position manually.'\n\t\t\t\t\t);\n\t\t\t\t\tselection = null;\n\t\t\t\t} else if (\n\t\t\t\t\tthis.props.selectionStart > record.text.length ||\n\t\t\t\t\tthis.props.selectionEnd > record.text.length\n\t\t\t\t) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t'Oops, selection will land outside the text, skipping setting it...'\n\t\t\t\t\t);\n\t\t\t\t\tselection = null;\n\t\t\t\t} else {\n\t\t\t\t\t// The following regular expression is used in Aztec here:\n\t\t\t\t\t// https://github.com/wordpress-mobile/AztecEditor-Android/blob/b1fad439d56fa6d4aa0b78526fef355c59d00dd3/aztec/src/main/kotlin/org/wordpress/aztec/AztecParser.kt#L656\n\t\t\t\t\tconst brBeforeParaMatches = html.match( /(<br>)+<\\/p>$/g );\n\t\t\t\t\tif ( brBeforeParaMatches ) {\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t'Oops, BR tag(s) at the end of content. Aztec will remove them, adapting the selection...'\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst count = (\n\t\t\t\t\t\t\tbrBeforeParaMatches[ 0 ].match( /br/g ) || []\n\t\t\t\t\t\t).length;\n\t\t\t\t\t\tif ( count > 0 ) {\n\t\t\t\t\t\t\tlet newSelectionStart =\n\t\t\t\t\t\t\t\tthis.props.selectionStart - count;\n\t\t\t\t\t\t\tif ( newSelectionStart < 0 ) {\n\t\t\t\t\t\t\t\tnewSelectionStart = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet newSelectionEnd =\n\t\t\t\t\t\t\t\tthis.props.selectionEnd - count;\n\t\t\t\t\t\t\tif ( newSelectionEnd < 0 ) {\n\t\t\t\t\t\t\t\tnewSelectionEnd = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tselection = {\n\t\t\t\t\t\t\t\tstart: newSelectionStart,\n\t\t\t\t\t\t\t\tend: newSelectionEnd,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( this.comesFromAztec ) {\n\t\t\tthis.comesFromAztec = false;\n\t\t\tthis.firedAfterTextChanged = false;\n\t\t}\n\n\t\t// Logic below assures that `RichText` width will always have equal value when container is almost fully filled.\n\t\tconst width =\n\t\t\tmaxWidth && this.state.width && maxWidth - this.state.width < 10\n\t\t\t\t? maxWidth\n\t\t\t\t: this.state.width;\n\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t{ children &&\n\t\t\t\t\tchildren( {\n\t\t\t\t\t\tisSelected,\n\t\t\t\t\t\tvalue: record,\n\t\t\t\t\t\tonChange: this.onFormatChange,\n\t\t\t\t\t\tonFocus: () => {},\n\t\t\t\t\t} ) }\n\t\t\t\t<RCTAztecView\n\t\t\t\t\tref={ ( ref ) => {\n\t\t\t\t\t\tthis._editor = ref;\n\n\t\t\t\t\t\tif ( this.props.setRef ) {\n\t\t\t\t\t\t\tthis.props.setRef( ref );\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t...style,\n\t\t\t\t\t\t...( this.isIOS && minWidth && maxWidth\n\t\t\t\t\t\t\t? { width }\n\t\t\t\t\t\t\t: {} ),\n\t\t\t\t\t\tminHeight: this.state.height,\n\t\t\t\t\t} }\n\t\t\t\t\ttext={ {\n\t\t\t\t\t\ttext: html,\n\t\t\t\t\t\teventCount: this.lastEventCount,\n\t\t\t\t\t\tselection,\n\t\t\t\t\t} }\n\t\t\t\t\tplaceholder={ this.props.placeholder }\n\t\t\t\t\tplaceholderTextColor={\n\t\t\t\t\t\tthis.props.placeholderTextColor ||\n\t\t\t\t\t\tdefaultPlaceholderTextColor\n\t\t\t\t\t}\n\t\t\t\t\tdeleteEnter={ this.props.deleteEnter }\n\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\tonFocus={ this.onFocus }\n\t\t\t\t\tonBlur={ this.onBlur }\n\t\t\t\t\tonEnter={ this.handleEnter }\n\t\t\t\t\tonBackspace={ this.handleDelete }\n\t\t\t\t\tonPaste={ this.onPaste }\n\t\t\t\t\tactiveFormats={ this.getActiveFormatNames( record ) }\n\t\t\t\t\tonContentSizeChange={ this.onContentSizeChange }\n\t\t\t\t\tonCaretVerticalPositionChange={\n\t\t\t\t\t\tthis.props.onCaretVerticalPositionChange\n\t\t\t\t\t}\n\t\t\t\t\tonSelectionChange={ this.onSelectionChangeFromAztec }\n\t\t\t\t\tblockType={ { tag: tagName } }\n\t\t\t\t\tcolor={ ( style && style.color ) || defaultColor }\n\t\t\t\t\tlinkTextColor={ defaultTextDecorationColor }\n\t\t\t\t\tmaxImagesWidth={ 200 }\n\t\t\t\t\tfontFamily={ this.props.fontFamily || defaultFontFamily }\n\t\t\t\t\tfontSize={\n\t\t\t\t\t\tthis.props.fontSize || ( style && style.fontSize )\n\t\t\t\t\t}\n\t\t\t\t\tfontWeight={ this.props.fontWeight }\n\t\t\t\t\tfontStyle={ this.props.fontStyle }\n\t\t\t\t\tdisableEditingMenu={ this.props.disableEditingMenu }\n\t\t\t\t\tisMultiline={ this.isMultiline }\n\t\t\t\t\ttextAlign={ this.props.textAlign }\n\t\t\t\t\t{ ...( this.isIOS ? { maxWidth } : {} ) }\n\t\t\t\t\tminWidth={ minWidth }\n\t\t\t\t\tid={ this.props.id }\n\t\t\t\t\tselectionColor={ this.props.selectionColor }\n\t\t\t\t/>\n\t\t\t\t{ isSelected && (\n\t\t\t\t\t<FormatEdit\n\t\t\t\t\t\tformatTypes={ formatTypes }\n\t\t\t\t\t\tvalue={ record }\n\t\t\t\t\t\twithoutInteractiveFormatting={\n\t\t\t\t\t\t\twithoutInteractiveFormatting\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonChange={ this.onFormatChange }\n\t\t\t\t\t\tonFocus={ () => {} }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nRichText.defaultProps = {\n\tformat: 'string',\n\tvalue: '',\n\ttagName: 'div',\n};\n\nexport default compose( [\n\twithSelect( ( select ) => ( {\n\t\tformatTypes: select( 'core/rich-text' ).getFormatTypes(),\n\t} ) ),\n\twithPreferredColorScheme,\n] )( RichText );\n"]}