{"version":3,"sources":["@wordpress/rich-text/src/component/index.js"],"names":["classnames","find","isNil","pickBy","startsWith","Component","forwardRef","BACKSPACE","DELETE","ENTER","LEFT","RIGHT","SPACE","ESCAPE","withSafeTimeout","compose","isShallowEqual","deprecated","FormatEdit","create","apply","toHTMLString","remove","removeFormat","isCollapsed","LINE_SEPARATOR","indentListItems","getActiveFormats","updateFormats","removeLineSeparator","isEmptyLine","withFormatTypes","BoundaryStyle","InlineWarning","window","getSelection","getComputedStyle","INSERTION_INPUT_TYPES_TO_IGNORE","Set","whiteSpace","defaultStyle","EMPTY_ACTIVE_FORMATS","createPrepareEditableTree","props","prefix","fns","Object","keys","reduce","accumulator","key","push","value","fn","text","formats","fixPlaceholderSelection","selection","anchorNode","anchorOffset","nodeType","ELEMENT_NODE","targetNode","childNodes","getAttribute","collapseToStart","RichText","selectionStart","selectionEnd","arguments","onFocus","bind","onBlur","onChange","handleDelete","handleEnter","handleSpace","handleHorizontalNavigation","onPaste","onCreateUndoLevel","onInput","onCompositionStart","onCompositionEnd","onSelectionChange","createRecord","applyRecord","valueToFormat","onPointerDown","formatToValue","Editable","onKeyDown","event","defaultPrevented","state","lastHistoryValue","record","start","end","document","removeEventListener","cancelAnimationFrame","rafId","domOnly","multilineTag","__unstableMultilineTag","forwardedRef","preserveWhiteSpace","range","rangeCount","getRangeAt","element","current","multilineWrapperTags","undefined","__unstableIsEditableTree","prepareEditableTree","__unstableDomOnly","placeholder","formatTypes","isSelected","__unstableIsSelected","activeFormats","preventDefault","clipboardData","items","files","plainText","html","getData","error1","error2","console","log","transformed","accumlator","__unstablePasteRule","Array","from","forEach","item","getAsFile","file","name","type","size","removeEditorOnlyFormats","unstableOnFocus","index","setState","requestAnimationFrame","addEventListener","setFocusedElement","alternative","instanceId","isComposing","inputType","nativeEvent","indexOf","has","change","withoutHistory","inputRule","__unstableInputRule","markAutomaticChange","__unstableMarkAutomaticChange","allowPrefixTransformations","__unstableAllowPrefixTransformations","setTimeout","clearTimeout","timeout","disabled","length","isCaretWithinFormattedText","__unstableIsCaretWithinFormattedText","onEnterFormattedText","__unstableOnEnterFormattedText","onExitFormattedText","__unstableOnExitFormattedText","newValue","changeHandlers","v","values","changeHandler","__unstableOnCreateUndoLevel","keyCode","__unstableDidAutomaticChange","__unstableUndo","onDelete","isReverse","onEnter","shiftKey","altKey","metaKey","ctrlKey","tagName","characterBefore","collapsed","direction","reverseKey","formatsBefore","formatsAfter","newActiveFormatsLength","source","newActiveFormats","slice","newPos","target","textContent","parentNode","ownerDocument","createRange","setStart","setEnd","removeAllRanges","addRange","prevProps","shouldReapply","selectionChanged","predicate","prepareProps","prevPrepareProps","format","prepare","formatType","__experimentalCreatePrepareEditableTree","TagName","style","className","ariaProps","children","allowedFormats","withoutInteractiveFormatting","focus","defaultProps","RichTextWrapper","ref"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { find, isNil, pickBy, startsWith } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component, forwardRef } from '@wordpress/element';\nimport {\n\tBACKSPACE,\n\tDELETE,\n\tENTER,\n\tLEFT,\n\tRIGHT,\n\tSPACE,\n\tESCAPE,\n} from '@wordpress/keycodes';\nimport { withSafeTimeout, compose } from '@wordpress/compose';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport FormatEdit from './format-edit';\nimport { create } from '../create';\nimport { apply } from '../to-dom';\nimport { toHTMLString } from '../to-html-string';\nimport { remove } from '../remove';\nimport { removeFormat } from '../remove-format';\nimport { isCollapsed } from '../is-collapsed';\nimport { LINE_SEPARATOR } from '../special-characters';\nimport { indentListItems } from '../indent-list-items';\nimport { getActiveFormats } from '../get-active-formats';\nimport { updateFormats } from '../update-formats';\nimport { removeLineSeparator } from '../remove-line-separator';\nimport { isEmptyLine } from '../is-empty';\nimport withFormatTypes from './with-format-types';\nimport { BoundaryStyle } from './boundary-style';\nimport { InlineWarning } from './inline-warning';\n\n/**\n * Browser dependencies\n */\n\nconst { getSelection, getComputedStyle } = window;\n\n/** @typedef {import('@wordpress/element').WPSyntheticEvent} WPSyntheticEvent */\n\n/**\n * All inserting input types that would insert HTML into the DOM.\n *\n * @see https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes\n *\n * @type {Set}\n */\nconst INSERTION_INPUT_TYPES_TO_IGNORE = new Set( [\n\t'insertParagraph',\n\t'insertOrderedList',\n\t'insertUnorderedList',\n\t'insertHorizontalRule',\n\t'insertLink',\n] );\n\n/**\n * In HTML, leading and trailing spaces are not visible, and multiple spaces\n * elsewhere are visually reduced to one space. This rule prevents spaces from\n * collapsing so all space is visible in the editor and can be removed. It also\n * prevents some browsers from inserting non-breaking spaces at the end of a\n * line to prevent the space from visually disappearing. Sometimes these non\n * breaking spaces can linger in the editor causing unwanted non breaking spaces\n * in between words. If also prevent Firefox from inserting a trailing `br` node\n * to visualise any trailing space, causing the element to be saved.\n *\n * > Authors are encouraged to set the 'white-space' property on editing hosts\n * > and on markup that was originally created through these editing mechanisms\n * > to the value 'pre-wrap'. Default HTML whitespace handling is not well\n * > suited to WYSIWYG editing, and line wrapping will not work correctly in\n * > some corner cases if 'white-space' is left at its default value.\n *\n * https://html.spec.whatwg.org/multipage/interaction.html#best-practices-for-in-page-editors\n *\n * @type {string}\n */\nconst whiteSpace = 'pre-wrap';\n\n/**\n * Default style object for the editable element.\n *\n * @type {Object<string,string>}\n */\nconst defaultStyle = { whiteSpace };\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\nfunction createPrepareEditableTree( props, prefix ) {\n\tconst fns = Object.keys( props ).reduce( ( accumulator, key ) => {\n\t\tif ( key.startsWith( prefix ) ) {\n\t\t\taccumulator.push( props[ key ] );\n\t\t}\n\n\t\treturn accumulator;\n\t}, [] );\n\n\treturn ( value ) =>\n\t\tfns.reduce( ( accumulator, fn ) => {\n\t\t\treturn fn( accumulator, value.text );\n\t\t}, value.formats );\n}\n\n/**\n * If the selection is set on the placeholder element, collapse the selection to\n * the start (before the placeholder).\n */\nfunction fixPlaceholderSelection() {\n\tconst selection = window.getSelection();\n\tconst { anchorNode, anchorOffset } = selection;\n\n\tif ( anchorNode.nodeType !== anchorNode.ELEMENT_NODE ) {\n\t\treturn;\n\t}\n\n\tconst targetNode = anchorNode.childNodes[ anchorOffset ];\n\n\tif (\n\t\t! targetNode ||\n\t\ttargetNode.nodeType !== targetNode.ELEMENT_NODE ||\n\t\t! targetNode.getAttribute( 'data-rich-text-placeholder' )\n\t) {\n\t\treturn;\n\t}\n\n\tselection.collapseToStart();\n}\n\n/**\n * See export statement below.\n */\nclass RichText extends Component {\n\tconstructor( { value, selectionStart, selectionEnd } ) {\n\t\tsuper( ...arguments );\n\n\t\tthis.onFocus = this.onFocus.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onChange = this.onChange.bind( this );\n\t\tthis.handleDelete = this.handleDelete.bind( this );\n\t\tthis.handleEnter = this.handleEnter.bind( this );\n\t\tthis.handleSpace = this.handleSpace.bind( this );\n\t\tthis.handleHorizontalNavigation = this.handleHorizontalNavigation.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.onPaste = this.onPaste.bind( this );\n\t\tthis.onCreateUndoLevel = this.onCreateUndoLevel.bind( this );\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onCompositionStart = this.onCompositionStart.bind( this );\n\t\tthis.onCompositionEnd = this.onCompositionEnd.bind( this );\n\t\tthis.onSelectionChange = this.onSelectionChange.bind( this );\n\t\tthis.createRecord = this.createRecord.bind( this );\n\t\tthis.applyRecord = this.applyRecord.bind( this );\n\t\tthis.valueToFormat = this.valueToFormat.bind( this );\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.formatToValue = this.formatToValue.bind( this );\n\t\tthis.Editable = this.Editable.bind( this );\n\n\t\tthis.onKeyDown = ( event ) => {\n\t\t\tif ( event.defaultPrevented ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.handleDelete( event );\n\t\t\tthis.handleEnter( event );\n\t\t\tthis.handleSpace( event );\n\t\t\tthis.handleHorizontalNavigation( event );\n\t\t};\n\n\t\tthis.state = {};\n\t\tthis.lastHistoryValue = value;\n\n\t\t// Internal values are updated synchronously, unlike props and state.\n\t\tthis.value = value;\n\t\tthis.record = this.formatToValue( value );\n\t\tthis.record.start = selectionStart;\n\t\tthis.record.end = selectionEnd;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\n\t\t\t'selectionchange',\n\t\t\tthis.onSelectionChange\n\t\t);\n\t\twindow.cancelAnimationFrame( this.rafId );\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.applyRecord( this.record, { domOnly: true } );\n\t}\n\n\tcreateRecord() {\n\t\tconst {\n\t\t\t__unstableMultilineTag: multilineTag,\n\t\t\tforwardedRef,\n\t\t\tpreserveWhiteSpace,\n\t\t} = this.props;\n\t\tconst selection = getSelection();\n\t\tconst range =\n\t\t\tselection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\n\t\treturn create( {\n\t\t\telement: forwardedRef.current,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\t__unstableIsEditableTree: true,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t}\n\n\tapplyRecord( record, { domOnly } = {} ) {\n\t\tconst {\n\t\t\t__unstableMultilineTag: multilineTag,\n\t\t\tforwardedRef,\n\t\t} = this.props;\n\n\t\tapply( {\n\t\t\tvalue: record,\n\t\t\tcurrent: forwardedRef.current,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tprepareEditableTree: createPrepareEditableTree(\n\t\t\t\tthis.props,\n\t\t\t\t'format_prepare_functions'\n\t\t\t),\n\t\t\t__unstableDomOnly: domOnly,\n\t\t\tplaceholder: this.props.placeholder,\n\t\t} );\n\t}\n\n\t/**\n\t * Handles a paste event.\n\t *\n\t * Saves the pasted data as plain text in `pastedPlainText`.\n\t *\n\t * @param {ClipboardEvent} event The paste event.\n\t */\n\tonPaste( event ) {\n\t\tconst {\n\t\t\tformatTypes,\n\t\t\tonPaste,\n\t\t\t__unstableIsSelected: isSelected,\n\t\t} = this.props;\n\t\tconst { activeFormats = [] } = this.state;\n\n\t\tif ( ! isSelected ) {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tconst clipboardData = event.clipboardData;\n\t\tlet { items, files } = clipboardData;\n\n\t\t// In Edge these properties can be null instead of undefined, so a more\n\t\t// rigorous test is required over using default values.\n\t\titems = isNil( items ) ? [] : items;\n\t\tfiles = isNil( files ) ? [] : files;\n\n\t\tlet plainText = '';\n\t\tlet html = '';\n\n\t\t// IE11 only supports `Text` as an argument for `getData` and will\n\t\t// otherwise throw an invalid argument error, so we try the standard\n\t\t// arguments first, then fallback to `Text` if they fail.\n\t\ttry {\n\t\t\tplainText = clipboardData.getData( 'text/plain' );\n\t\t\thtml = clipboardData.getData( 'text/html' );\n\t\t} catch ( error1 ) {\n\t\t\ttry {\n\t\t\t\thtml = clipboardData.getData( 'Text' );\n\t\t\t} catch ( error2 ) {\n\t\t\t\t// Some browsers like UC Browser paste plain text by default and\n\t\t\t\t// don't support clipboardData at all, so allow default\n\t\t\t\t// behaviour.\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\t// Allows us to ask for this information when we get a report.\n\t\twindow.console.log( 'Received HTML:\\n\\n', html );\n\t\twindow.console.log( 'Received plain text:\\n\\n', plainText );\n\n\t\tconst record = this.record;\n\t\tconst transformed = formatTypes.reduce(\n\t\t\t( accumlator, { __unstablePasteRule } ) => {\n\t\t\t\t// Only allow one transform.\n\t\t\t\tif ( __unstablePasteRule && accumlator === record ) {\n\t\t\t\t\taccumlator = __unstablePasteRule( record, {\n\t\t\t\t\t\thtml,\n\t\t\t\t\t\tplainText,\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn accumlator;\n\t\t\t},\n\t\t\trecord\n\t\t);\n\n\t\tif ( transformed !== record ) {\n\t\t\tthis.onChange( transformed );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( onPaste ) {\n\t\t\tfiles = Array.from( files );\n\n\t\t\tArray.from( items ).forEach( ( item ) => {\n\t\t\t\tif ( ! item.getAsFile ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst file = item.getAsFile();\n\n\t\t\t\tif ( ! file ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { name, type, size } = file;\n\n\t\t\t\tif ( ! find( files, { name, type, size } ) ) {\n\t\t\t\t\tfiles.push( file );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tonPaste( {\n\t\t\t\tvalue: this.removeEditorOnlyFormats( record ),\n\t\t\t\tonChange: this.onChange,\n\t\t\t\thtml,\n\t\t\t\tplainText,\n\t\t\t\tfiles,\n\t\t\t\tactiveFormats,\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Handles a focus event on the contenteditable field, calling the\n\t * `unstableOnFocus` prop callback if one is defined. The callback does not\n\t * receive any arguments.\n\t *\n\t * This is marked as a private API and the `unstableOnFocus` prop is not\n\t * documented, as the current requirements where it is used are subject to\n\t * future refactoring following `isSelected` handling.\n\t *\n\t * In contrast with `setFocusedElement`, this is only triggered in response\n\t * to focus within the contenteditable field, whereas `setFocusedElement`\n\t * is triggered on focus within any `RichText` descendent element.\n\t *\n\t * @see setFocusedElement\n\t *\n\t * @private\n\t */\n\tonFocus() {\n\t\tconst { unstableOnFocus } = this.props;\n\n\t\tif ( unstableOnFocus ) {\n\t\t\tunstableOnFocus();\n\t\t}\n\n\t\tif ( ! this.props.__unstableIsSelected ) {\n\t\t\t// We know for certain that on focus, the old selection is invalid. It\n\t\t\t// will be recalculated on the next mouseup, keyup, or touchend event.\n\t\t\tconst index = undefined;\n\t\t\tconst activeFormats = EMPTY_ACTIVE_FORMATS;\n\n\t\t\tthis.record = {\n\t\t\t\t...this.record,\n\t\t\t\tstart: index,\n\t\t\t\tend: index,\n\t\t\t\tactiveFormats,\n\t\t\t};\n\t\t\tthis.props.onSelectionChange( index, index );\n\t\t\tthis.setState( { activeFormats } );\n\t\t} else {\n\t\t\tthis.props.onSelectionChange( this.record.start, this.record.end );\n\t\t\tthis.setState( {\n\t\t\t\tactiveFormats: getActiveFormats(\n\t\t\t\t\t{\n\t\t\t\t\t\t...this.record,\n\t\t\t\t\t\tactiveFormats: undefined,\n\t\t\t\t\t},\n\t\t\t\t\tEMPTY_ACTIVE_FORMATS\n\t\t\t\t),\n\t\t\t} );\n\t\t}\n\n\t\t// Update selection as soon as possible, which is at the next animation\n\t\t// frame. The event listener for selection changes may be added too late\n\t\t// at this point, but this focus event is still too early to calculate\n\t\t// the selection.\n\t\tthis.rafId = window.requestAnimationFrame( this.onSelectionChange );\n\n\t\tdocument.addEventListener( 'selectionchange', this.onSelectionChange );\n\n\t\tif ( this.props.setFocusedElement ) {\n\t\t\tdeprecated( 'wp.blockEditor.RichText setFocusedElement prop', {\n\t\t\t\talternative: 'selection state from the block editor store.',\n\t\t\t} );\n\t\t\tthis.props.setFocusedElement( this.props.instanceId );\n\t\t}\n\t}\n\n\tonBlur() {\n\t\tdocument.removeEventListener(\n\t\t\t'selectionchange',\n\t\t\tthis.onSelectionChange\n\t\t);\n\t}\n\n\t/**\n\t * Handle input on the next selection change event.\n\t *\n\t * @param {WPSyntheticEvent} event Synthetic input event.\n\t */\n\tonInput( event ) {\n\t\t// Do not trigger a change if characters are being composed. Browsers\n\t\t// will usually emit a final `input` event when the characters are\n\t\t// composed.\n\t\t// As of December 2019, Safari doesn't support nativeEvent.isComposing.\n\t\tif ( this.isComposing ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet inputType;\n\n\t\tif ( event ) {\n\t\t\tinputType = event.inputType;\n\t\t}\n\n\t\tif ( ! inputType && event && event.nativeEvent ) {\n\t\t\tinputType = event.nativeEvent.inputType;\n\t\t}\n\n\t\t// The browser formatted something or tried to insert HTML.\n\t\t// Overwrite it. It will be handled later by the format library if\n\t\t// needed.\n\t\tif (\n\t\t\tinputType &&\n\t\t\t( inputType.indexOf( 'format' ) === 0 ||\n\t\t\t\tINSERTION_INPUT_TYPES_TO_IGNORE.has( inputType ) )\n\t\t) {\n\t\t\tthis.applyRecord( this.record );\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.createRecord();\n\t\tconst { start, activeFormats = [] } = this.record;\n\n\t\t// Update the formats between the last and new caret position.\n\t\tconst change = updateFormats( {\n\t\t\tvalue,\n\t\t\tstart,\n\t\t\tend: value.start,\n\t\t\tformats: activeFormats,\n\t\t} );\n\n\t\tthis.onChange( change, { withoutHistory: true } );\n\n\t\tconst {\n\t\t\t__unstableInputRule: inputRule,\n\t\t\t__unstableMarkAutomaticChange: markAutomaticChange,\n\t\t\t__unstableAllowPrefixTransformations: allowPrefixTransformations,\n\t\t\tformatTypes,\n\t\t\tsetTimeout,\n\t\t\tclearTimeout,\n\t\t} = this.props;\n\n\t\t// Create an undo level when input stops for over a second.\n\t\tclearTimeout( this.onInput.timeout );\n\t\tthis.onInput.timeout = setTimeout( this.onCreateUndoLevel, 1000 );\n\n\t\tif ( ! allowPrefixTransformations ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Only run input rules when inserting text.\n\t\tif ( inputType !== 'insertText' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( inputRule ) {\n\t\t\tinputRule( change, this.valueToFormat );\n\t\t}\n\n\t\tconst transformed = formatTypes.reduce(\n\t\t\t( accumlator, { __unstableInputRule } ) => {\n\t\t\t\tif ( __unstableInputRule ) {\n\t\t\t\t\taccumlator = __unstableInputRule( accumlator );\n\t\t\t\t}\n\n\t\t\t\treturn accumlator;\n\t\t\t},\n\t\t\tchange\n\t\t);\n\n\t\tif ( transformed !== change ) {\n\t\t\tthis.onCreateUndoLevel();\n\t\t\tthis.onChange( { ...transformed, activeFormats } );\n\t\t\tmarkAutomaticChange();\n\t\t}\n\t}\n\n\tonCompositionStart() {\n\t\tthis.isComposing = true;\n\t\t// Do not update the selection when characters are being composed as\n\t\t// this rerenders the component and might distroy internal browser\n\t\t// editing state.\n\t\tdocument.removeEventListener(\n\t\t\t'selectionchange',\n\t\t\tthis.onSelectionChange\n\t\t);\n\t}\n\n\tonCompositionEnd() {\n\t\tthis.isComposing = false;\n\t\t// Ensure the value is up-to-date for browsers that don't emit a final\n\t\t// input event after composition.\n\t\tthis.onInput( { inputType: 'insertText' } );\n\t\t// Tracking selection changes can be resumed.\n\t\tdocument.addEventListener( 'selectionchange', this.onSelectionChange );\n\t}\n\n\t/**\n\t * Syncs the selection to local state. A callback for the `selectionchange`\n\t * native events, `keyup`, `mouseup` and `touchend` synthetic events, and\n\t * animation frames after the `focus` event.\n\t *\n\t * @param {Event|WPSyntheticEvent|DOMHighResTimeStamp} event\n\t */\n\tonSelectionChange( event ) {\n\t\tif (\n\t\t\tevent.type !== 'selectionchange' &&\n\t\t\t! this.props.__unstableIsSelected\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.props.disabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case of a keyboard event, ignore selection changes during\n\t\t// composition.\n\t\tif ( this.isComposing ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { start, end, text } = this.createRecord();\n\t\tconst value = this.record;\n\n\t\t// Fallback mechanism for IE11, which doesn't support the input event.\n\t\t// Any input results in a selection change.\n\t\tif ( text !== value.text ) {\n\t\t\tthis.onInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( start === value.start && end === value.end ) {\n\t\t\t// Sometimes the browser may set the selection on the placeholder\n\t\t\t// element, in which case the caret is not visible. We need to set\n\t\t\t// the caret before the placeholder if that's the case.\n\t\t\tif ( value.text.length === 0 && start === 0 ) {\n\t\t\t\tfixPlaceholderSelection();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\t__unstableIsCaretWithinFormattedText: isCaretWithinFormattedText,\n\t\t\t__unstableOnEnterFormattedText: onEnterFormattedText,\n\t\t\t__unstableOnExitFormattedText: onExitFormattedText,\n\t\t} = this.props;\n\t\tconst newValue = {\n\t\t\t...value,\n\t\t\tstart,\n\t\t\tend,\n\t\t\t// Allow `getActiveFormats` to get new `activeFormats`.\n\t\t\tactiveFormats: undefined,\n\t\t};\n\n\t\tconst activeFormats = getActiveFormats(\n\t\t\tnewValue,\n\t\t\tEMPTY_ACTIVE_FORMATS\n\t\t);\n\n\t\t// Update the value with the new active formats.\n\t\tnewValue.activeFormats = activeFormats;\n\n\t\tif ( ! isCaretWithinFormattedText && activeFormats.length ) {\n\t\t\tonEnterFormattedText();\n\t\t} else if ( isCaretWithinFormattedText && ! activeFormats.length ) {\n\t\t\tonExitFormattedText();\n\t\t}\n\n\t\t// It is important that the internal value is updated first,\n\t\t// otherwise the value will be wrong on render!\n\t\tthis.record = newValue;\n\t\tthis.applyRecord( newValue, { domOnly: true } );\n\t\tthis.props.onSelectionChange( start, end );\n\t\tthis.setState( { activeFormats } );\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object}  record            The record to sync and apply.\n\t * @param {Object}  $2                Named options.\n\t * @param {boolean} $2.withoutHistory If true, no undo level will be\n\t *                                    created.\n\t */\n\tonChange( record, { withoutHistory } = {} ) {\n\t\tthis.applyRecord( record );\n\n\t\tconst { start, end, activeFormats = [] } = record;\n\t\tconst changeHandlers = pickBy( this.props, ( v, key ) =>\n\t\t\tkey.startsWith( 'format_on_change_functions_' )\n\t\t);\n\n\t\tObject.values( changeHandlers ).forEach( ( changeHandler ) => {\n\t\t\tchangeHandler( record.formats, record.text );\n\t\t} );\n\n\t\tthis.value = this.valueToFormat( record );\n\t\tthis.record = record;\n\t\t// Selection must be updated first, so it is recorded in history when\n\t\t// the content change happens.\n\t\tthis.props.onSelectionChange( start, end );\n\t\tthis.props.onChange( this.value );\n\t\tthis.setState( { activeFormats } );\n\n\t\tif ( ! withoutHistory ) {\n\t\t\tthis.onCreateUndoLevel();\n\t\t}\n\t}\n\n\tonCreateUndoLevel() {\n\t\t// If the content is the same, no level needs to be created.\n\t\tif ( this.lastHistoryValue === this.value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.props.__unstableOnCreateUndoLevel();\n\t\tthis.lastHistoryValue = this.value;\n\t}\n\n\t/**\n\t * Handles delete on keydown:\n\t * - outdent list items,\n\t * - delete content if everything is selected,\n\t * - trigger the onDelete prop when selection is uncollapsed and at an edge.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleDelete( event ) {\n\t\tconst { keyCode } = event;\n\n\t\tif (\n\t\t\tkeyCode !== DELETE &&\n\t\t\tkeyCode !== BACKSPACE &&\n\t\t\tkeyCode !== ESCAPE\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.props.__unstableDidAutomaticChange ) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.props.__unstableUndo();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( keyCode === ESCAPE ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { onDelete, __unstableMultilineTag: multilineTag } = this.props;\n\t\tconst { activeFormats = [] } = this.state;\n\t\tconst value = this.createRecord();\n\t\tconst { start, end, text } = value;\n\t\tconst isReverse = keyCode === BACKSPACE;\n\n\t\t// Always handle full content deletion ourselves.\n\t\tif ( start === 0 && end !== 0 && end === text.length ) {\n\t\t\tthis.onChange( remove( value ) );\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( multilineTag ) {\n\t\t\tlet newValue;\n\n\t\t\t// Check to see if we should remove the first item if empty.\n\t\t\tif (\n\t\t\t\tisReverse &&\n\t\t\t\tvalue.start === 0 &&\n\t\t\t\tvalue.end === 0 &&\n\t\t\t\tisEmptyLine( value )\n\t\t\t) {\n\t\t\t\tnewValue = removeLineSeparator( value, ! isReverse );\n\t\t\t} else {\n\t\t\t\tnewValue = removeLineSeparator( value, isReverse );\n\t\t\t}\n\n\t\t\tif ( newValue ) {\n\t\t\t\tthis.onChange( newValue );\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Only process delete if the key press occurs at an uncollapsed edge.\n\t\tif (\n\t\t\t! onDelete ||\n\t\t\t! isCollapsed( value ) ||\n\t\t\tactiveFormats.length ||\n\t\t\t( isReverse && start !== 0 ) ||\n\t\t\t( ! isReverse && end !== text.length )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tonDelete( { isReverse, value } );\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Triggers the `onEnter` prop on keydown.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleEnter( event ) {\n\t\tif ( event.keyCode !== ENTER ) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tconst { onEnter } = this.props;\n\n\t\tif ( ! onEnter ) {\n\t\t\treturn;\n\t\t}\n\n\t\tonEnter( {\n\t\t\tvalue: this.removeEditorOnlyFormats( this.createRecord() ),\n\t\t\tonChange: this.onChange,\n\t\t\tshiftKey: event.shiftKey,\n\t\t} );\n\t}\n\n\t/**\n\t * Indents list items on space keydown.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleSpace( event ) {\n\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\t\tconst { tagName, __unstableMultilineTag: multilineTag } = this.props;\n\n\t\tif (\n\t\t\t// Only override when no modifiers are pressed.\n\t\t\tshiftKey ||\n\t\t\taltKey ||\n\t\t\tmetaKey ||\n\t\t\tctrlKey ||\n\t\t\tkeyCode !== SPACE ||\n\t\t\tmultilineTag !== 'li'\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.createRecord();\n\n\t\tif ( ! isCollapsed( value ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { text, start } = value;\n\t\tconst characterBefore = text[ start - 1 ];\n\n\t\t// The caret must be at the start of a line.\n\t\tif ( characterBefore && characterBefore !== LINE_SEPARATOR ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onChange( indentListItems( value, { type: tagName } ) );\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Handles horizontal keyboard navigation when no modifiers are pressed. The\n\t * navigation is handled separately to move correctly around format\n\t * boundaries.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleHorizontalNavigation( event ) {\n\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\tif (\n\t\t\t// Only override left and right keys without modifiers pressed.\n\t\t\tshiftKey ||\n\t\t\taltKey ||\n\t\t\tmetaKey ||\n\t\t\tctrlKey ||\n\t\t\t( keyCode !== LEFT && keyCode !== RIGHT )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.record;\n\t\tconst { text, formats, start, end, activeFormats = [] } = value;\n\t\tconst collapsed = isCollapsed( value );\n\t\t// To do: ideally, we should look at visual position instead.\n\t\tconst { direction } = getComputedStyle(\n\t\t\tthis.props.forwardedRef.current\n\t\t);\n\t\tconst reverseKey = direction === 'rtl' ? RIGHT : LEFT;\n\t\tconst isReverse = event.keyCode === reverseKey;\n\n\t\t// If the selection is collapsed and at the very start, do nothing if\n\t\t// navigating backward.\n\t\t// If the selection is collapsed and at the very end, do nothing if\n\t\t// navigating forward.\n\t\tif ( collapsed && activeFormats.length === 0 ) {\n\t\t\tif ( start === 0 && isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( end === text.length && ! isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the selection is not collapsed, let the browser handle collapsing\n\t\t// the selection for now. Later we could expand this logic to set\n\t\t// boundary positions if needed.\n\t\tif ( ! collapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In all other cases, prevent default behaviour.\n\t\tevent.preventDefault();\n\n\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\n\t\tlet newActiveFormatsLength = activeFormats.length;\n\t\tlet source = formatsAfter;\n\n\t\tif ( formatsBefore.length > formatsAfter.length ) {\n\t\t\tsource = formatsBefore;\n\t\t}\n\n\t\t// If the amount of formats before the caret and after the caret is\n\t\t// different, the caret is at a format boundary.\n\t\tif ( formatsBefore.length < formatsAfter.length ) {\n\t\t\tif ( ! isReverse && activeFormats.length < formatsAfter.length ) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\n\t\t\tif ( isReverse && activeFormats.length > formatsBefore.length ) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t}\n\t\t} else if ( formatsBefore.length > formatsAfter.length ) {\n\t\t\tif ( ! isReverse && activeFormats.length > formatsAfter.length ) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t}\n\n\t\t\tif ( isReverse && activeFormats.length < formatsBefore.length ) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\t\t}\n\n\t\tif ( newActiveFormatsLength !== activeFormats.length ) {\n\t\t\tconst newActiveFormats = source.slice( 0, newActiveFormatsLength );\n\t\t\tconst newValue = { ...value, activeFormats: newActiveFormats };\n\t\t\tthis.record = newValue;\n\t\t\tthis.applyRecord( newValue );\n\t\t\tthis.setState( { activeFormats: newActiveFormats } );\n\t\t\treturn;\n\t\t}\n\n\t\tconst newPos = start + ( isReverse ? -1 : 1 );\n\t\tconst newActiveFormats = isReverse ? formatsBefore : formatsAfter;\n\t\tconst newValue = {\n\t\t\t...value,\n\t\t\tstart: newPos,\n\t\t\tend: newPos,\n\t\t\tactiveFormats: newActiveFormats,\n\t\t};\n\n\t\tthis.record = newValue;\n\t\tthis.applyRecord( newValue );\n\t\tthis.props.onSelectionChange( newPos, newPos );\n\t\tthis.setState( { activeFormats: newActiveFormats } );\n\t}\n\n\t/**\n\t * Select object when they are clicked. The browser will not set any\n\t * selection when clicking e.g. an image.\n\t *\n\t * @param {WPSyntheticEvent} event Synthetic mousedown or touchstart event.\n\t */\n\tonPointerDown( event ) {\n\t\tconst { target } = event;\n\n\t\t// If the child element has no text content, it must be an object.\n\t\tif (\n\t\t\ttarget === this.props.forwardedRef.current ||\n\t\t\ttarget.textContent\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { parentNode } = target;\n\t\tconst index = Array.from( parentNode.childNodes ).indexOf( target );\n\t\tconst range = target.ownerDocument.createRange();\n\t\tconst selection = getSelection();\n\n\t\trange.setStart( target.parentNode, index );\n\t\trange.setEnd( target.parentNode, index + 1 );\n\n\t\tselection.removeAllRanges();\n\t\tselection.addRange( range );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst {\n\t\t\ttagName,\n\t\t\tvalue,\n\t\t\tselectionStart,\n\t\t\tselectionEnd,\n\t\t\tplaceholder,\n\t\t\t__unstableIsSelected: isSelected,\n\t\t} = this.props;\n\n\t\t// Check if tag name changed.\n\t\tlet shouldReapply = tagName !== prevProps.tagName;\n\n\t\t// Check if the content changed.\n\t\tshouldReapply =\n\t\t\tshouldReapply ||\n\t\t\t( value !== prevProps.value && value !== this.value );\n\n\t\tconst selectionChanged =\n\t\t\t( selectionStart !== prevProps.selectionStart &&\n\t\t\t\tselectionStart !== this.record.start ) ||\n\t\t\t( selectionEnd !== prevProps.selectionEnd &&\n\t\t\t\tselectionEnd !== this.record.end );\n\n\t\t// Check if the selection changed.\n\t\tshouldReapply =\n\t\t\tshouldReapply ||\n\t\t\t( isSelected && ! prevProps.isSelected && selectionChanged );\n\n\t\tconst prefix = 'format_prepare_props_';\n\t\tconst predicate = ( v, key ) => key.startsWith( prefix );\n\t\tconst prepareProps = pickBy( this.props, predicate );\n\t\tconst prevPrepareProps = pickBy( prevProps, predicate );\n\n\t\t// Check if any format props changed.\n\t\tshouldReapply =\n\t\t\tshouldReapply || ! isShallowEqual( prepareProps, prevPrepareProps );\n\n\t\t// Rerender if the placeholder changed.\n\t\tshouldReapply = shouldReapply || placeholder !== prevProps.placeholder;\n\n\t\tif ( shouldReapply ) {\n\t\t\tthis.value = value;\n\t\t\tthis.record = this.formatToValue( value );\n\t\t\tthis.record.start = selectionStart;\n\t\t\tthis.record.end = selectionEnd;\n\t\t\tthis.applyRecord( this.record );\n\t\t} else if ( selectionChanged ) {\n\t\t\tthis.record = {\n\t\t\t\t...this.record,\n\t\t\t\tstart: selectionStart,\n\t\t\t\tend: selectionEnd,\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Converts the outside data structure to our internal representation.\n\t *\n\t * @param {*} value The outside value, data type depends on props.\n\t * @return {Object} An internal rich-text value.\n\t */\n\tformatToValue( value ) {\n\t\tconst {\n\t\t\tformat,\n\t\t\t__unstableMultilineTag: multilineTag,\n\t\t\tpreserveWhiteSpace,\n\t\t} = this.props;\n\n\t\tif ( format !== 'string' ) {\n\t\t\treturn value;\n\t\t}\n\n\t\tconst prepare = createPrepareEditableTree(\n\t\t\tthis.props,\n\t\t\t'format_value_functions'\n\t\t);\n\n\t\tvalue = create( {\n\t\t\thtml: value,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t\tvalue.formats = prepare( value );\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Removes editor only formats from the value.\n\t *\n\t * Editor only formats are applied using `prepareEditableTree`, so we need to\n\t * remove them before converting the internal state\n\t *\n\t * @param {Object} value The internal rich-text value.\n\t * @return {Object} A new rich-text value.\n\t */\n\tremoveEditorOnlyFormats( value ) {\n\t\tthis.props.formatTypes.forEach( ( formatType ) => {\n\t\t\t// Remove formats created by prepareEditableTree, because they are editor only.\n\t\t\tif ( formatType.__experimentalCreatePrepareEditableTree ) {\n\t\t\t\tvalue = removeFormat(\n\t\t\t\t\tvalue,\n\t\t\t\t\tformatType.name,\n\t\t\t\t\t0,\n\t\t\t\t\tvalue.text.length\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Converts the internal value to the external data format.\n\t *\n\t * @param {Object} value The internal rich-text value.\n\t * @return {*} The external data format, data type depends on props.\n\t */\n\tvalueToFormat( value ) {\n\t\tconst {\n\t\t\tformat,\n\t\t\t__unstableMultilineTag: multilineTag,\n\t\t\tpreserveWhiteSpace,\n\t\t} = this.props;\n\n\t\tvalue = this.removeEditorOnlyFormats( value );\n\n\t\tif ( format !== 'string' ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn toHTMLString( { value, multilineTag, preserveWhiteSpace } );\n\t}\n\n\tEditable( props ) {\n\t\tconst {\n\t\t\ttagName: TagName = 'div',\n\t\t\tstyle,\n\t\t\tclassName,\n\t\t\tplaceholder,\n\t\t\tforwardedRef,\n\t\t\tdisabled,\n\t\t} = this.props;\n\t\tconst ariaProps = pickBy( this.props, ( value, key ) =>\n\t\t\tstartsWith( key, 'aria-' )\n\t\t);\n\n\t\treturn (\n\t\t\t<TagName\n\t\t\t\t// Overridable props.\n\t\t\t\trole=\"textbox\"\n\t\t\t\taria-multiline\n\t\t\t\taria-label={ placeholder }\n\t\t\t\t{ ...props }\n\t\t\t\t{ ...ariaProps }\n\t\t\t\tref={ forwardedRef }\n\t\t\t\tstyle={ style ? { ...style, whiteSpace } : defaultStyle }\n\t\t\t\tclassName={ classnames( 'rich-text', className ) }\n\t\t\t\tonPaste={ this.onPaste }\n\t\t\t\tonInput={ this.onInput }\n\t\t\t\tonCompositionStart={ this.onCompositionStart }\n\t\t\t\tonCompositionEnd={ this.onCompositionEnd }\n\t\t\t\tonKeyDown={\n\t\t\t\t\tprops.onKeyDown\n\t\t\t\t\t\t? ( event ) => {\n\t\t\t\t\t\t\t\tprops.onKeyDown( event );\n\t\t\t\t\t\t\t\tthis.onKeyDown( event );\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: this.onKeyDown\n\t\t\t\t}\n\t\t\t\tonFocus={ this.onFocus }\n\t\t\t\tonBlur={ this.onBlur }\n\t\t\t\tonMouseDown={ this.onPointerDown }\n\t\t\t\tonTouchStart={ this.onPointerDown }\n\t\t\t\t// Selection updates must be done at these events as they\n\t\t\t\t// happen before the `selectionchange` event. In some cases,\n\t\t\t\t// the `selectionchange` event may not even fire, for\n\t\t\t\t// example when the window receives focus again on click.\n\t\t\t\tonKeyUp={ this.onSelectionChange }\n\t\t\t\tonMouseUp={ this.onSelectionChange }\n\t\t\t\tonTouchEnd={ this.onSelectionChange }\n\t\t\t\t// Do not set the attribute if disabled.\n\t\t\t\tcontentEditable={ disabled ? undefined : true }\n\t\t\t\tsuppressContentEditableWarning={ ! disabled }\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\t__unstableIsSelected: isSelected,\n\t\t\tchildren,\n\t\t\tallowedFormats,\n\t\t\twithoutInteractiveFormatting,\n\t\t\tformatTypes,\n\t\t\tforwardedRef,\n\t\t} = this.props;\n\t\tconst { activeFormats } = this.state;\n\n\t\tconst onFocus = () => {\n\t\t\tforwardedRef.current.focus();\n\t\t\tthis.applyRecord( this.record );\n\t\t};\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BoundaryStyle\n\t\t\t\t\tactiveFormats={ activeFormats }\n\t\t\t\t\tforwardedRef={ forwardedRef }\n\t\t\t\t/>\n\t\t\t\t<InlineWarning forwardedRef={ forwardedRef } />\n\t\t\t\t{ isSelected && (\n\t\t\t\t\t<FormatEdit\n\t\t\t\t\t\tallowedFormats={ allowedFormats }\n\t\t\t\t\t\twithoutInteractiveFormatting={\n\t\t\t\t\t\t\twithoutInteractiveFormatting\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={ this.record }\n\t\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\tformatTypes={ formatTypes }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ children &&\n\t\t\t\t\tchildren( {\n\t\t\t\t\t\tisSelected,\n\t\t\t\t\t\tvalue: this.record,\n\t\t\t\t\t\tonChange: this.onChange,\n\t\t\t\t\t\tonFocus,\n\t\t\t\t\t\tEditable: this.Editable,\n\t\t\t\t\t} ) }\n\t\t\t\t{ ! children && <this.Editable /> }\n\t\t\t</>\n\t\t);\n\t}\n}\n\nRichText.defaultProps = {\n\tformat: 'string',\n\tvalue: '',\n};\n\nconst RichTextWrapper = compose( [ withSafeTimeout, withFormatTypes ] )(\n\tRichText\n);\n\n/**\n * Renders a rich content input, providing users with the option to format the\n * content.\n */\nexport default forwardRef( ( props, ref ) => {\n\treturn <RichTextWrapper { ...props } forwardedRef={ ref } />;\n} );\n"]}