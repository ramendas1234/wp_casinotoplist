{"version":3,"sources":["@wordpress/a11y/src/index.js"],"names":["setup","containerPolite","document","getElementById","containerAssertive","speak","message","ariaLive","textContent"],"mappings":";;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AAVA;;;;AAKA;;;;AAOA;;;AAGO,IAAMA,KAAK,GAAG,SAARA,KAAQ,GAAW;AAC/B,MAAMC,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAyB,mBAAzB,CAAxB;AACA,MAAMC,kBAAkB,GAAGF,QAAQ,CAACC,cAAT,CAC1B,sBAD0B,CAA3B;;AAIA,MAAKF,eAAe,KAAK,IAAzB,EAAgC;AAC/B,+BAAc,QAAd;AACA;;AACD,MAAKG,kBAAkB,KAAK,IAA5B,EAAmC;AAClC,+BAAc,WAAd;AACA;AACD,CAZM;AAcP;;;;;;AAGA,uBAAUJ,KAAV;AAEA;;;;;;;;;;;;;;;;;;;;AAmBO,IAAMK,KAAK,GAAG,SAARA,KAAQ,CAAUC,OAAV,EAAmBC,QAAnB,EAA8B;AAClD;AACA;AAEAD,EAAAA,OAAO,GAAG,4BAAeA,OAAf,CAAV;AAEA,MAAML,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAyB,mBAAzB,CAAxB;AACA,MAAMC,kBAAkB,GAAGF,QAAQ,CAACC,cAAT,CAC1B,sBAD0B,CAA3B;;AAIA,MAAKC,kBAAkB,IAAI,gBAAgBG,QAA3C,EAAsD;AACrDH,IAAAA,kBAAkB,CAACI,WAAnB,GAAiCF,OAAjC;AACA,GAFD,MAEO,IAAKL,eAAL,EAAuB;AAC7BA,IAAAA,eAAe,CAACO,WAAhB,GAA8BF,OAA9B;AACA;AACD,CAhBM","sourcesContent":["/**\n * WordPress dependencies\n */\nimport domReady from '@wordpress/dom-ready';\n\n/**\n * Internal dependencies\n */\nimport addContainer from './addContainer';\nimport clear from './clear';\nimport filterMessage from './filterMessage';\n\n/**\n * Create the live regions.\n */\nexport const setup = function() {\n\tconst containerPolite = document.getElementById( 'a11y-speak-polite' );\n\tconst containerAssertive = document.getElementById(\n\t\t'a11y-speak-assertive'\n\t);\n\n\tif ( containerPolite === null ) {\n\t\taddContainer( 'polite' );\n\t}\n\tif ( containerAssertive === null ) {\n\t\taddContainer( 'assertive' );\n\t}\n};\n\n/**\n * Run setup on domReady.\n */\ndomReady( setup );\n\n/**\n * Allows you to easily announce dynamic interface updates to screen readers using ARIA live regions.\n * This module is inspired by the `speak` function in wp-a11y.js\n *\n * @param {string} message  The message to be announced by Assistive Technologies.\n * @param {string} ariaLive Optional. The politeness level for aria-live. Possible values:\n *                          polite or assertive. Default polite.\n *\n * @example\n * ```js\n * import { speak } from '@wordpress/a11y';\n *\n * // For polite messages that shouldn't interrupt what screen readers are currently announcing.\n * speak( 'The message you want to send to the ARIA live region' );\n *\n * // For assertive messages that should interrupt what screen readers are currently announcing.\n * speak( 'The message you want to send to the ARIA live region', 'assertive' );\n * ```\n */\nexport const speak = function( message, ariaLive ) {\n\t// Clear previous messages to allow repeated strings being read out.\n\tclear();\n\n\tmessage = filterMessage( message );\n\n\tconst containerPolite = document.getElementById( 'a11y-speak-polite' );\n\tconst containerAssertive = document.getElementById(\n\t\t'a11y-speak-assertive'\n\t);\n\n\tif ( containerAssertive && 'assertive' === ariaLive ) {\n\t\tcontainerAssertive.textContent = message;\n\t} else if ( containerPolite ) {\n\t\tcontainerPolite.textContent = message;\n\t}\n};\n"]}